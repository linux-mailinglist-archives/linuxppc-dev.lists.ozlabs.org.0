Return-Path: <linuxppc-dev-bounces+lists+linuxppc-dev=lfdr.de@lists.ozlabs.org>
X-Original-To: lists+linuxppc-dev@lfdr.de
Delivered-To: lists+linuxppc-dev@lfdr.de
Received: from lists.ozlabs.org (lists.ozlabs.org [IPv6:2404:9400:2:0:216:3eff:fee1:b9f1])
	by mail.lfdr.de (Postfix) with ESMTPS id 5F40A8A0320
	for <lists+linuxppc-dev@lfdr.de>; Thu, 11 Apr 2024 00:16:25 +0200 (CEST)
Authentication-Results: lists.ozlabs.org;
	dkim=pass (1024-bit key; unprotected) header.d=163.com header.i=@163.com header.a=rsa-sha256 header.s=s110527 header.b=c441On34;
	dkim-atps=neutral
Received: from boromir.ozlabs.org (localhost [IPv6:::1])
	by lists.ozlabs.org (Postfix) with ESMTP id 4VFHGv1Vsrz3vZY
	for <lists+linuxppc-dev@lfdr.de>; Thu, 11 Apr 2024 08:16:23 +1000 (AEST)
X-Original-To: linuxppc-dev@lists.ozlabs.org
Delivered-To: linuxppc-dev@lists.ozlabs.org
Authentication-Results: lists.ozlabs.org;
	dkim=pass (1024-bit key; unprotected) header.d=163.com header.i=@163.com header.a=rsa-sha256 header.s=s110527 header.b=c441On34;
	dkim-atps=neutral
Authentication-Results: lists.ozlabs.org; spf=pass (sender SPF authorized) smtp.mailfrom=163.com (client-ip=220.197.31.5; helo=m16.mail.163.com; envelope-from=sensor1010@163.com; receiver=lists.ozlabs.org)
Received: from m16.mail.163.com (m16.mail.163.com [220.197.31.5])
	by lists.ozlabs.org (Postfix) with ESMTP id 4VF51N5DGQz30fh
	for <linuxppc-dev@lists.ozlabs.org>; Thu, 11 Apr 2024 00:33:55 +1000 (AEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=163.com;
	s=s110527; h=Date:From:Subject:Content-Type:MIME-Version:
	Message-ID; bh=jKx8SxkJoPteRufkfeA+KaENktcfTdFRyD2CE0bjqkA=; b=c
	441On34pMy6A7Tpj6yOkd1YMmVB06za73deXTX4IBKQuvuoJ+wpaD8yldp5GWqIs
	Z7zuO5nM7yF15nHNxrwurHe2JYPZItkHkZJvzF86X/yeOGVe7ed5+tkAXFedh2t8
	CR9Wct//gRBsCgauT11EsUK8C0D3qbBtpccOGWWXT4=
Received: from mail-tracker-145-3ep34-c9h23-5f64cf7787-82gdh (unknown [10.131.138.72])
	by smtp100 (Coremail) with SMTP id KSIvCgDXvwA7oxZmgSYuAA--.9025S2;
	Wed, 10 Apr 2024 22:33:32 +0800 (CST)
Received: from sensor1010$163.com ( [101.86.11.106] ) by
 ajax-webmail-wmsvr-trace-40-94 (Coremail) ; Wed, 10 Apr 2024 22:33:13 +0800
 (CST)
Date: Wed, 10 Apr 2024 22:33:13 +0800 (CST)
From: lizhe  <sensor1010@163.com>
To: "Christophe Leroy" <christophe.leroy@csgroup.eu>
Subject: Re:Re: [PATCH] cpufreq: Covert to exit callback returning void
X-Priority: 3
X-Mailer: Coremail Webmail Server Version XT5.0.14 build 20230109(dcb5de15)
 Copyright (c) 2002-2024 www.mailtech.cn 163com
In-Reply-To: <398726f4-3ec3-406d-b154-1f0caad63f02@csgroup.eu>
References: <20240410132247.3587-1-sensor1010@163.com>
 <279401246.446176.1712756559290.JavaMail.root@mail-tracker-145-3ep34-c9h23-5f64cf7787-82gdh>
 <398726f4-3ec3-406d-b154-1f0caad63f02@csgroup.eu>
X-CM-CTRLMSGS: NsX59HBsdXM9MTcxMjc1OTU5MzY1OF8xNjY4OGYxZDMzOTllNjRhNTgyZTczN
 2RlODE5ZmE0MiZtYWlsVHJhY2tpbmc9MSZ0cmFjZUtleT01ZjhkNTc4Y2RmMWY5YzQ5MzVlNTY4
 OWNhZTM1N2E1NQ==
X-NTES-SC: AL_Qu2aAPuetk0i5SieYukfm0cagO04WMKxufUi3o9TOph6jDnp/AcHf3B+Jl//4dimLwamnyWqfilz7P9VXaR1WYMM82AhaLnE/GtaKUq3BBJN/A==
Content-Type: multipart/alternative; 
	boundary="----=_Part_15090_85454238.1712759593886"
MIME-Version: 1.0
Message-ID: <1373818509.447024.1712759611882.JavaMail.root@mail-tracker-145-3ep34-c9h23-5f64cf7787-82gdh>
X-Coremail-Locale: zh_CN
X-NTES-TM-INF: aRIGHTkHd18HcD5kDjUAeG8xEHQvB04jZz1IeCdNFWYKABtEbD87fRpTLmcsLFBcYhIcamNgLw
X-CM-TRANSID: KSIvCgDXvwA7oxZmgSYuAA--.9025S2
X-Coremail-Antispam: 1Uf129KBjvAXoWfur17uFykGr4fZr1ktrWUArb_yoW5JrWfJo
	WfJFyfJ3WUGryftwn8AayxtFsrXanFk3WrJ398JrsxWa4qy3W7X39rJr45JF4fWF45KrWx
	C3Wjgrn3Aa1xGr1Un29KB7ZKAUJUUUU8529EdanIXcx71UUUUU7v73VFW2AGmfu7bjvjm3
	AaLaJ3UbIYCTnIWIevJa73UjIFyTuYvj4RJUUUUUUUU
X-Originating-IP: [10.131.138.72]
X-CM-SenderInfo: 5vhq20jurqiii6rwjhhfrp/
X-Mailman-Approved-At: Thu, 11 Apr 2024 08:13:29 +1000
X-BeenThere: linuxppc-dev@lists.ozlabs.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Linux on PowerPC Developers Mail List <linuxppc-dev.lists.ozlabs.org>
List-Unsubscribe: <https://lists.ozlabs.org/options/linuxppc-dev>,
 <mailto:linuxppc-dev-request@lists.ozlabs.org?subject=unsubscribe>
List-Archive: <http://lists.ozlabs.org/pipermail/linuxppc-dev/>
List-Post: <mailto:linuxppc-dev@lists.ozlabs.org>
List-Help: <mailto:linuxppc-dev-request@lists.ozlabs.org?subject=help>
List-Subscribe: <https://lists.ozlabs.org/listinfo/linuxppc-dev>,
 <mailto:linuxppc-dev-request@lists.ozlabs.org?subject=subscribe>
Cc: "rafael@kernel.org" <rafael@kernel.org>, "viresh.kumar@linaro.org" <viresh.kumar@linaro.org>, "linux-tegra@vger.kernel.org" <linux-tegra@vger.kernel.org>, "ray.huang@amd.com" <ray.huang@amd.com>, "srinivas.pandruvada@linux.intel.com" <srinivas.pandruvada@linux.intel.com>, "alyssa@rosenzweig.io" <alyssa@rosenzweig.io>, "khilman@kernel.org" <khilman@kernel.org>, "linux-pm@vger.kernel.org" <linux-pm@vger.kernel.org>, "jonathanh@nvidia.com" <jonathanh@nvidia.com>, "aneesh.kumar@kernel.org" <aneesh.kumar@kernel.org>, "bcm-kernel-feedback-list@broadcom.com" <bcm-kernel-feedback-list@broadcom.com>, "linux-arm-kernel@lists.infradead.org" <linux-arm-kernel@lists.infradead.org>, "naveen.n.rao@linux.ibm.com" <naveen.n.rao@linux.ibm.com>, "lenb@kernel.org" <lenb@kernel.org>, "sven@svenpeter.dev" <sven@svenpeter.dev>, "linux-arm-msm@vger.kernel.org" <linux-arm-msm@vger.kernel.org>, "npiggin@gmail.com" <npiggin@gmail.com>, "linux-mediatek@lists.infradead.org" <linux-mediatek@lists.infradead.or
 g>, "mmayer@broadcom.com" <mmayer@broadcom.com>, "matthias.bgg@gmail.com" <matthias.bgg@gmail.com>, "linux-omap@vger.kernel.org" <linux-omap@vger.kernel.org>, "cristian.marussi@arm.com" <cristian.marussi@arm.com>, "angelogioacchino.delregno@collabora.com" <angelogioacchino.delregno@collabora.com>, "andersson@kernel.org" <andersson@kernel.org>, "marcan@marcan.st" <marcan@marcan.st>, "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>, "konrad.dybcio@linaro.org" <konrad.dybcio@linaro.org>, "thierry.reding@gmail.com" <thierry.reding@gmail.com>, "asahi@lists.linux.dev" <asahi@lists.linux.dev>, "sudeep.holla@arm.com" <sudeep.holla@arm.com>, "linuxppc-dev@lists.ozlabs.org" <linuxppc-dev@lists.ozlabs.org>
Errors-To: linuxppc-dev-bounces+lists+linuxppc-dev=lfdr.de@lists.ozlabs.org
Sender: "Linuxppc-dev" <linuxppc-dev-bounces+lists+linuxppc-dev=lfdr.de@lists.ozlabs.org>

------=_Part_15090_85454238.1712759593886
Content-Type: text/plain; charset=GBK
Content-Transfer-Encoding: base64

SGmjrAogICAgIGkgaGF2ZSBhbHJlYWR5IGNoYW5nZSB0aGUgZGVmaW5pdGlvbiBvZiBleGl0CiAg
ICAgaW4gc3RydWN0IGNwdV9mcmVxX2RyaXZlciBpbiBpbmNsdWRlL2xpbnV4L2NwdWZyZXEuaAoK
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIExpemhlCiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIFRoYW5rcwoKCgoKCgoKCgoKCgoKCgoKCkF0IDIwMjQtMDQtMTAgMjE6NTU6NTYsICJDaHJp
c3RvcGhlIExlcm95IiA8Y2hyaXN0b3BoZS5sZXJveUBjc2dyb3VwLmV1PiB3cm90ZToKPgo+Cj5M
ZSAxMC8wNC8yMDI0IKikIDE1OjQyLCBsaXpoZSBhIKimY3JpdCA6Cj4+IAo+PiBIaaOsCj4+ICAg
ICAgIEkgaGF2ZSBhbHJlYWR5IHRlc3RlZCBpdCwgaXQgaXMgZnVuY3Rpb25pbmcgcHJvcGVybHks
IFBsZWFzZSByZXZpZXcuCj4+IAo+PiAqTGl6aGUqCj4+ICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKPj4gICAg
ICAgICAgICAgICAgICAgICAgIFRoYW5rcwo+PiAKPgo+UGxlYXNlIGRvbid0IHRvcC1wb3N0LCBz
ZWUgCj5odHRwczovL2RvY3Mua2VybmVsLm9yZy9wcm9jZXNzL3N1Ym1pdHRpbmctcGF0Y2hlcy5o
dG1sP2hpZ2hsaWdodD1tYWlsaW5nK2xpc3QrZXRpcXVldHRlI3VzZS10cmltbWVkLWludGVybGVh
dmVkLXJlcGxpZXMtaW4tZW1haWwtZGlzY3Vzc2lvbnMKPgo+UGxlYXNlIGFsd2F5cyBwb3N0IGlu
IHBsYWluIHRleHQgKEFTQ0lJLW9ubHkpLCBuZXZlciBhcyBhbiBIVE1MIG1lc3NhZ2UuCj4KPkFu
ZCBzdGlsbCwgeW91ciBjaGFuZ2VzIGNhbm5vdCBidWlsZCB3aXRob3V0IGEgY2hhbmdlIGluIHRo
ZSBkZWZpbml0aW9uIAo+b2YgZXhpdCBpbiBzdHJ1Y3QgY3B1X2ZyZXEgZHJpdmVyIGluIGluY2x1
ZGUvbGludXgvY3B1ZnJlcS5oCj5OZXZlciBzdWJtaXQgYSBwYXRjaCB0aGF0IGRvZXNuJ3QgYnVp
bGQuCj4KPkNocmlzdG9waGUKPgo+PiBBdCAyMDI0LTA0LTEwIDIxOjIyOjQ3LCAiTGl6aGUiIDxz
ZW5zb3IxMDEwQDE2My5jb20+IHdyb3RlOgo+Pj5Gb3IgdGhlIGV4aXQoKSBjYWxsYmFjayBmdW5j
dGlvbiByZXR1cm5pbmcgYW4gaW50IHR5cGUgdmFsdWUuCj4+PnRoaXMgbGVhZHMgbWFueSBkcml2
ZXIgYXV0aG9ycyBtaXN0YWtlbmx5IGJlbGlldmluZyB0aGF0IGVycm9yCj4+PmhhbmRsaW5nIGNh
biBiZSBwZXJmb3JtZWQgYnkgcmV0dXJuaW5nIGFuIGVycm9yIGNvZGUuIEhvd2V2ZXIuCj4+PnRo
ZSByZXR1cm5lZCB2YWx1ZSBpcyBpZ25vcmUsIGFuZCB0byBpbXByb3ZlIHRoaXMgc2l0dWF0aW9u
Lgo+Pj5pdCBpcyBwcm9wb3NlZCB0byBtb2RpZnkgdGhlIHJldHVybiB0eXBlIG9mIHRoZSBleGl0
KCkgY2FsbGJhY2sKPj4+ZnVuY3Rpb24gdG8gdm9pZAo+Pj4KPj4+U2lnbmVkLW9mZi1ieTogTGl6
aGUgPHNlbnNvcjEwMTBAMTYzLmNvbT4KPj4+LS0tCj4+PiBkcml2ZXJzL2NwdWZyZXEvYWNwaS1j
cHVmcmVxLmMgICAgICAgICB8IDQgKy0tLQo+Pj4gZHJpdmVycy9jcHVmcmVxL2FtZC1wc3RhdGUu
YyAgICAgICAgICAgfCA3ICsrLS0tLS0KPj4+IGRyaXZlcnMvY3B1ZnJlcS9hcHBsZS1zb2MtY3B1
ZnJlcS5jICAgIHwgNCArLS0tCj4+PiBkcml2ZXJzL2NwdWZyZXEvYm1pcHMtY3B1ZnJlcS5jICAg
ICAgICB8IDQgKy0tLQo+Pj4gZHJpdmVycy9jcHVmcmVxL2NwcGNfY3B1ZnJlcS5jICAgICAgICAg
fCAzICstLQo+Pj4gZHJpdmVycy9jcHVmcmVxL2NwdWZyZXEtZHQuYyAgICAgICAgICAgfCAzICst
LQo+Pj4gZHJpdmVycy9jcHVmcmVxL2VfcG93ZXJzYXZlci5jICAgICAgICAgfCAzICstLQo+Pj4g
ZHJpdmVycy9jcHVmcmVxL2ludGVsX3BzdGF0ZS5jICAgICAgICAgfCA0ICstLS0KPj4+IGRyaXZl
cnMvY3B1ZnJlcS9tZWRpYXRlay1jcHVmcmVxLWh3LmMgIHwgNCArLS0tCj4+PiBkcml2ZXJzL2Nw
dWZyZXEvbWVkaWF0ZWstY3B1ZnJlcS5jICAgICB8IDQgKy0tLQo+Pj4gZHJpdmVycy9jcHVmcmVx
L29tYXAtY3B1ZnJlcS5jICAgICAgICAgfCAzICstLQo+Pj4gZHJpdmVycy9jcHVmcmVxL3Bhc2Vt
aS1jcHVmcmVxLmMgICAgICAgfCA2ICsrLS0tLQo+Pj4gZHJpdmVycy9jcHVmcmVxL3Bvd2Vybm93
LWs2LmMgICAgICAgICAgfCAzICstLQo+Pj4gZHJpdmVycy9jcHVmcmVxL3Bvd2Vybm93LWs3LmMg
ICAgICAgICAgfCAzICstLQo+Pj4gZHJpdmVycy9jcHVmcmVxL3Bvd2Vybm93LWs4LmMgICAgICAg
ICAgfCA0ICstLS0KPj4+IGRyaXZlcnMvY3B1ZnJlcS9wb3dlcm52LWNwdWZyZXEuYyAgICAgIHwg
NCArLS0tCj4+PiBkcml2ZXJzL2NwdWZyZXEvcHBjX2NiZV9jcHVmcmVxLmMgICAgICB8IDMgKy0t
Cj4+PiBkcml2ZXJzL2NwdWZyZXEvcWNvbS1jcHVmcmVxLWh3LmMgICAgICB8IDQgKy0tLQo+Pj4g
ZHJpdmVycy9jcHVmcmVxL3FvcmlxLWNwdWZyZXEuYyAgICAgICAgfCA0ICstLS0KPj4+IGRyaXZl
cnMvY3B1ZnJlcS9zY21pLWNwdWZyZXEuYyAgICAgICAgIHwgNCArLS0tCj4+PiBkcml2ZXJzL2Nw
dWZyZXEvc2NwaS1jcHVmcmVxLmMgICAgICAgICB8IDQgKy0tLQo+Pj4gZHJpdmVycy9jcHVmcmVx
L3NoLWNwdWZyZXEuYyAgICAgICAgICAgfCA0ICstLS0KPj4+IGRyaXZlcnMvY3B1ZnJlcS9zcGFy
Yy11czJlLWNwdWZyZXEuYyAgIHwgMyArLS0KPj4+IGRyaXZlcnMvY3B1ZnJlcS9zcGFyYy11czMt
Y3B1ZnJlcS5jICAgIHwgMyArLS0KPj4+IGRyaXZlcnMvY3B1ZnJlcS9zcGVlZHN0ZXAtY2VudHJp
bm8uYyAgIHwgNCArLS0tCj4+PiBkcml2ZXJzL2NwdWZyZXEvdGVncmExOTQtY3B1ZnJlcS5jICAg
ICB8IDQgKy0tLQo+Pj4gZHJpdmVycy9jcHVmcmVxL3ZleHByZXNzLXNwYy1jcHVmcmVxLmMgfCAz
ICstLQo+Pj4gMjcgZmlsZXMgY2hhbmdlZCwgMjkgaW5zZXJ0aW9ucygrKSwgNzQgZGVsZXRpb25z
KC0pCj4+Pgo+Pj5kaWZmIC0tZ2l0IGEvZHJpdmVycy9jcHVmcmVxL2FjcGktY3B1ZnJlcS5jIGIv
ZHJpdmVycy9jcHVmcmVxL2FjcGktY3B1ZnJlcS5jCj4+PmluZGV4IDM3ZjFjZGY0NmQyOS4uMzNm
MTgxNDBlOWE0IDEwMDY0NAo+Pj4tLS0gYS9kcml2ZXJzL2NwdWZyZXEvYWNwaS1jcHVmcmVxLmMK
Pj4+KysrIGIvZHJpdmVycy9jcHVmcmVxL2FjcGktY3B1ZnJlcS5jCj4+PkBAIC05MDYsNyArOTA2
LDcgQEAgc3RhdGljIGludCBhY3BpX2NwdWZyZXFfY3B1X2luaXQoc3RydWN0IGNwdWZyZXFfcG9s
aWN5ICpwb2xpY3kpCj4+PiAJcmV0dXJuIHJlc3VsdDsKPj4+IH0KPj4+IAo+Pj4tc3RhdGljIGlu
dCBhY3BpX2NwdWZyZXFfY3B1X2V4aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+
PitzdGF0aWMgdm9pZCBhY3BpX2NwdWZyZXFfY3B1X2V4aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5
ICpwb2xpY3kpCj4+PiB7Cj4+PiAJc3RydWN0IGFjcGlfY3B1ZnJlcV9kYXRhICpkYXRhID0gcG9s
aWN5LT5kcml2ZXJfZGF0YTsKPj4+IAo+Pj5AQCAtOTE5LDggKzkxOSw2IEBAIHN0YXRpYyBpbnQg
YWNwaV9jcHVmcmVxX2NwdV9leGl0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+Pj4g
CWZyZWVfY3B1bWFza192YXIoZGF0YS0+ZnJlcWRvbWFpbl9jcHVzKTsKPj4+IAlrZnJlZShwb2xp
Y3ktPmZyZXFfdGFibGUpOwo+Pj4gCWtmcmVlKGRhdGEpOwo+Pj4tCj4+Pi0JcmV0dXJuIDA7Cj4+
PiB9Cj4+PiAKPj4+IHN0YXRpYyBpbnQgYWNwaV9jcHVmcmVxX3Jlc3VtZShzdHJ1Y3QgY3B1ZnJl
cV9wb2xpY3kgKnBvbGljeSkKPj4+ZGlmZiAtLWdpdCBhL2RyaXZlcnMvY3B1ZnJlcS9hbWQtcHN0
YXRlLmMgYi9kcml2ZXJzL2NwdWZyZXEvYW1kLXBzdGF0ZS5jCj4+PmluZGV4IDIwMTVjOWZjYzNj
OS4uNjBiM2QyMGQ1OTM5IDEwMDY0NAo+Pj4tLS0gYS9kcml2ZXJzL2NwdWZyZXEvYW1kLXBzdGF0
ZS5jCj4+PisrKyBiL2RyaXZlcnMvY3B1ZnJlcS9hbWQtcHN0YXRlLmMKPj4+QEAgLTkxOSw3ICs5
MTksNyBAQCBzdGF0aWMgaW50IGFtZF9wc3RhdGVfY3B1X2luaXQoc3RydWN0IGNwdWZyZXFfcG9s
aWN5ICpwb2xpY3kpCj4+PiAJcmV0dXJuIHJldDsKPj4+IH0KPj4+IAo+Pj4tc3RhdGljIGludCBh
bWRfcHN0YXRlX2NwdV9leGl0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+Pj4rc3Rh
dGljIHZvaWQgYW1kX3BzdGF0ZV9jcHVfZXhpdChzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGlj
eSkKPj4+IHsKPj4+IAlzdHJ1Y3QgYW1kX2NwdWRhdGEgKmNwdWRhdGEgPSBwb2xpY3ktPmRyaXZl
cl9kYXRhOwo+Pj4gCj4+PkBAIC05MjcsOCArOTI3LDYgQEAgc3RhdGljIGludCBhbWRfcHN0YXRl
X2NwdV9leGl0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+Pj4gCWZyZXFfcW9zX3Jl
bW92ZV9yZXF1ZXN0KCZjcHVkYXRhLT5yZXFbMF0pOwo+Pj4gCXBvbGljeS0+ZmFzdF9zd2l0Y2hf
cG9zc2libGUgPSBmYWxzZTsKPj4+IAlrZnJlZShjcHVkYXRhKTsKPj4+LQo+Pj4tCXJldHVybiAw
Owo+Pj4gfQo+Pj4gCj4+PiBzdGF0aWMgaW50IGFtZF9wc3RhdGVfY3B1X3Jlc3VtZShzdHJ1Y3Qg
Y3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+QEAgLTEzNzYsMTAgKzEzNzQsOSBAQCBzdGF0aWMg
aW50IGFtZF9wc3RhdGVfZXBwX2NwdV9pbml0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5
KQo+Pj4gCXJldHVybiByZXQ7Cj4+PiB9Cj4+PiAKPj4+LXN0YXRpYyBpbnQgYW1kX3BzdGF0ZV9l
cHBfY3B1X2V4aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PitzdGF0aWMgdm9p
ZCBhbWRfcHN0YXRlX2VwcF9jcHVfZXhpdChzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkK
Pj4+IHsKPj4+IAlwcl9kZWJ1ZygiQ1BVICVkIGV4aXRpbmdcbiIsIHBvbGljeS0+Y3B1KTsKPj4+
LQlyZXR1cm4gMDsKPj4+IH0KPj4+IAo+Pj4gc3RhdGljIHZvaWQgYW1kX3BzdGF0ZV9lcHBfdXBk
YXRlX2xpbWl0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+Pj5kaWZmIC0tZ2l0IGEv
ZHJpdmVycy9jcHVmcmVxL2FwcGxlLXNvYy1jcHVmcmVxLmMgYi9kcml2ZXJzL2NwdWZyZXEvYXBw
bGUtc29jLWNwdWZyZXEuYwo+Pj5pbmRleCAwMjFmNDIzNzA1ZTEuLmFmMzRjMjJmYTI3MyAxMDA2
NDQKPj4+LS0tIGEvZHJpdmVycy9jcHVmcmVxL2FwcGxlLXNvYy1jcHVmcmVxLmMKPj4+KysrIGIv
ZHJpdmVycy9jcHVmcmVxL2FwcGxlLXNvYy1jcHVmcmVxLmMKPj4+QEAgLTMwNSw3ICszMDUsNyBA
QCBzdGF0aWMgaW50IGFwcGxlX3NvY19jcHVmcmVxX2luaXQoc3RydWN0IGNwdWZyZXFfcG9saWN5
ICpwb2xpY3kpCj4+PiAJcmV0dXJuIHJldDsKPj4+IH0KPj4+IAo+Pj4tc3RhdGljIGludCBhcHBs
ZV9zb2NfY3B1ZnJlcV9leGl0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+Pj4rc3Rh
dGljIHZvaWQgYXBwbGVfc29jX2NwdWZyZXFfZXhpdChzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBv
bGljeSkKPj4+IHsKPj4+IAlzdHJ1Y3QgYXBwbGVfY3B1X3ByaXYgKnByaXYgPSBwb2xpY3ktPmRy
aXZlcl9kYXRhOwo+Pj4gCj4+PkBAIC0zMTMsOCArMzEzLDYgQEAgc3RhdGljIGludCBhcHBsZV9z
b2NfY3B1ZnJlcV9leGl0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+Pj4gCWRldl9w
bV9vcHBfcmVtb3ZlX2FsbF9keW5hbWljKHByaXYtPmNwdV9kZXYpOwo+Pj4gCWlvdW5tYXAocHJp
di0+cmVnX2Jhc2UpOwo+Pj4gCWtmcmVlKHByaXYpOwo+Pj4tCj4+Pi0JcmV0dXJuIDA7Cj4+PiB9
Cj4+PiAKPj4+IHN0YXRpYyBzdHJ1Y3QgY3B1ZnJlcV9kcml2ZXIgYXBwbGVfc29jX2NwdWZyZXFf
ZHJpdmVyID0gewo+Pj5kaWZmIC0tZ2l0IGEvZHJpdmVycy9jcHVmcmVxL2JtaXBzLWNwdWZyZXEu
YyBiL2RyaXZlcnMvY3B1ZnJlcS9ibWlwcy1jcHVmcmVxLmMKPj4+aW5kZXggMzkyMjFhOWExODdh
Li4xN2E0YzE3NDU1M2QgMTAwNjQ0Cj4+Pi0tLSBhL2RyaXZlcnMvY3B1ZnJlcS9ibWlwcy1jcHVm
cmVxLmMKPj4+KysrIGIvZHJpdmVycy9jcHVmcmVxL2JtaXBzLWNwdWZyZXEuYwo+Pj5AQCAtMTIx
LDExICsxMjEsOSBAQCBzdGF0aWMgaW50IGJtaXBzX2NwdWZyZXFfdGFyZ2V0X2luZGV4KHN0cnVj
dCBjcHVmcmVxX3BvbGljeSAqcG9saWN5LAo+Pj4gCXJldHVybiAwOwo+Pj4gfQo+Pj4gCj4+Pi1z
dGF0aWMgaW50IGJtaXBzX2NwdWZyZXFfZXhpdChzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGlj
eSkKPj4+K3N0YXRpYyB2b2lkIGJtaXBzX2NwdWZyZXFfZXhpdChzdHJ1Y3QgY3B1ZnJlcV9wb2xp
Y3kgKnBvbGljeSkKPj4+IHsKPj4+IAlrZnJlZShwb2xpY3ktPmZyZXFfdGFibGUpOwo+Pj4tCj4+
Pi0JcmV0dXJuIDA7Cj4+PiB9Cj4+PiAKPj4+IHN0YXRpYyBpbnQgYm1pcHNfY3B1ZnJlcV9pbml0
KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+Pj5kaWZmIC0tZ2l0IGEvZHJpdmVycy9j
cHVmcmVxL2NwcGNfY3B1ZnJlcS5jIGIvZHJpdmVycy9jcHVmcmVxL2NwcGNfY3B1ZnJlcS5jCj4+
PmluZGV4IDY0NDIwZDljZmQxZS4uZGNjYjljMWYwODdkIDEwMDY0NAo+Pj4tLS0gYS9kcml2ZXJz
L2NwdWZyZXEvY3BwY19jcHVmcmVxLmMKPj4+KysrIGIvZHJpdmVycy9jcHVmcmVxL2NwcGNfY3B1
ZnJlcS5jCj4+PkBAIC02ODgsNyArNjg4LDcgQEAgc3RhdGljIGludCBjcHBjX2NwdWZyZXFfY3B1
X2luaXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PiAJcmV0dXJuIHJldDsKPj4+
IH0KPj4+IAo+Pj4tc3RhdGljIGludCBjcHBjX2NwdWZyZXFfY3B1X2V4aXQoc3RydWN0IGNwdWZy
ZXFfcG9saWN5ICpwb2xpY3kpCj4+PitzdGF0aWMgdm9pZCBjcHBjX2NwdWZyZXFfY3B1X2V4aXQo
c3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PiB7Cj4+PiAJc3RydWN0IGNwcGNfY3B1
ZGF0YSAqY3B1X2RhdGEgPSBwb2xpY3ktPmRyaXZlcl9kYXRhOwo+Pj4gCXN0cnVjdCBjcHBjX3Bl
cmZfY2FwcyAqY2FwcyA9ICZjcHVfZGF0YS0+cGVyZl9jYXBzOwo+Pj5AQCAtNzA1LDcgKzcwNSw2
IEBAIHN0YXRpYyBpbnQgY3BwY19jcHVmcmVxX2NwdV9leGl0KHN0cnVjdCBjcHVmcmVxX3BvbGlj
eSAqcG9saWN5KQo+Pj4gCQkJIGNhcHMtPmxvd2VzdF9wZXJmLCBjcHUsIHJldCk7Cj4+PiAKPj4+
IAljcHBjX2NwdWZyZXFfcHV0X2NwdV9kYXRhKHBvbGljeSk7Cj4+Pi0JcmV0dXJuIDA7Cj4+PiB9
Cj4+PiAKPj4+IHN0YXRpYyBpbmxpbmUgdTY0IGdldF9kZWx0YSh1NjQgdDEsIHU2NCB0MCkKPj4+
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvY3B1ZnJlcS9jcHVmcmVxLWR0LmMgYi9kcml2ZXJzL2NwdWZy
ZXEvY3B1ZnJlcS1kdC5jCj4+PmluZGV4IDJkODNiYmM2NWRkMC4uZWFmMDI1NzllYTc0IDEwMDY0
NAo+Pj4tLS0gYS9kcml2ZXJzL2NwdWZyZXEvY3B1ZnJlcS1kdC5jCj4+PisrKyBiL2RyaXZlcnMv
Y3B1ZnJlcS9jcHVmcmVxLWR0LmMKPj4+QEAgLTE2NiwxMCArMTY2LDkgQEAgc3RhdGljIGludCBj
cHVmcmVxX29mZmxpbmUoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PiAJcmV0dXJu
IDA7Cj4+PiB9Cj4+PiAKPj4+LXN0YXRpYyBpbnQgY3B1ZnJlcV9leGl0KHN0cnVjdCBjcHVmcmVx
X3BvbGljeSAqcG9saWN5KQo+Pj4rc3RhdGljIHZvaWQgY3B1ZnJlcV9leGl0KHN0cnVjdCBjcHVm
cmVxX3BvbGljeSAqcG9saWN5KQo+Pj4gewo+Pj4gCWNsa19wdXQocG9saWN5LT5jbGspOwo+Pj4t
CXJldHVybiAwOwo+Pj4gfQo+Pj4gCj4+PiBzdGF0aWMgc3RydWN0IGNwdWZyZXFfZHJpdmVyIGR0
X2NwdWZyZXFfZHJpdmVyID0gewo+Pj5kaWZmIC0tZ2l0IGEvZHJpdmVycy9jcHVmcmVxL2VfcG93
ZXJzYXZlci5jIGIvZHJpdmVycy9jcHVmcmVxL2VfcG93ZXJzYXZlci5jCj4+PmluZGV4IGFiOTNi
Y2U4YWU3Ny4uNmU5NThiMDllMWI1IDEwMDY0NAo+Pj4tLS0gYS9kcml2ZXJzL2NwdWZyZXEvZV9w
b3dlcnNhdmVyLmMKPj4+KysrIGIvZHJpdmVycy9jcHVmcmVxL2VfcG93ZXJzYXZlci5jCj4+PkBA
IC0zNjAsMTQgKzM2MCwxMyBAQCBzdGF0aWMgaW50IGVwc19jcHVfaW5pdChzdHJ1Y3QgY3B1ZnJl
cV9wb2xpY3kgKnBvbGljeSkKPj4+IAlyZXR1cm4gMDsKPj4+IH0KPj4+IAo+Pj4tc3RhdGljIGlu
dCBlcHNfY3B1X2V4aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PitzdGF0aWMg
dm9pZCBlcHNfY3B1X2V4aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PiB7Cj4+
PiAJdW5zaWduZWQgaW50IGNwdSA9IHBvbGljeS0+Y3B1Owo+Pj4gCj4+PiAJLyogQnllICovCj4+
PiAJa2ZyZWUoZXBzX2NwdVtjcHVdKTsKPj4+IAllcHNfY3B1W2NwdV0gPSBOVUxMOwo+Pj4tCXJl
dHVybiAwOwo+Pj4gfQo+Pj4gCj4+PiBzdGF0aWMgc3RydWN0IGNwdWZyZXFfZHJpdmVyIGVwc19k
cml2ZXIgPSB7Cj4+PmRpZmYgLS1naXQgYS9kcml2ZXJzL2NwdWZyZXEvaW50ZWxfcHN0YXRlLmMg
Yi9kcml2ZXJzL2NwdWZyZXEvaW50ZWxfcHN0YXRlLmMKPj4+aW5kZXggZGJiZjI5OWY0MjE5Li5h
YTQzNWQyNGMyMGUgMTAwNjQ0Cj4+Pi0tLSBhL2RyaXZlcnMvY3B1ZnJlcS9pbnRlbF9wc3RhdGUu
Ywo+Pj4rKysgYi9kcml2ZXJzL2NwdWZyZXEvaW50ZWxfcHN0YXRlLmMKPj4+QEAgLTI3MzEsMTMg
KzI3MzEsMTEgQEAgc3RhdGljIGludCBpbnRlbF9wc3RhdGVfY3B1X29mZmxpbmUoc3RydWN0IGNw
dWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PiAJcmV0dXJuIGludGVsX2NwdWZyZXFfY3B1X29mZmxp
bmUocG9saWN5KTsKPj4+IH0KPj4+IAo+Pj4tc3RhdGljIGludCBpbnRlbF9wc3RhdGVfY3B1X2V4
aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PitzdGF0aWMgdm9pZCBpbnRlbF9w
c3RhdGVfY3B1X2V4aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PiB7Cj4+PiAJ
cHJfZGVidWcoIkNQVSAlZCBleGl0aW5nXG4iLCBwb2xpY3ktPmNwdSk7Cj4+PiAKPj4+IAlwb2xp
Y3ktPmZhc3Rfc3dpdGNoX3Bvc3NpYmxlID0gZmFsc2U7Cj4+Pi0KPj4+LQlyZXR1cm4gMDsKPj4+
IH0KPj4+IAo+Pj4gc3RhdGljIGludCBfX2ludGVsX3BzdGF0ZV9jcHVfaW5pdChzdHJ1Y3QgY3B1
ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+ZGlmZiAtLWdpdCBhL2RyaXZlcnMvY3B1ZnJlcS9tZWRp
YXRlay1jcHVmcmVxLWh3LmMgYi9kcml2ZXJzL2NwdWZyZXEvbWVkaWF0ZWstY3B1ZnJlcS1ody5j
Cj4+PmluZGV4IDhkMDk3ZGNkZGRhNC4uODkyNWUwOTZkNWI5IDEwMDY0NAo+Pj4tLS0gYS9kcml2
ZXJzL2NwdWZyZXEvbWVkaWF0ZWstY3B1ZnJlcS1ody5jCj4+PisrKyBiL2RyaXZlcnMvY3B1ZnJl
cS9tZWRpYXRlay1jcHVmcmVxLWh3LmMKPj4+QEAgLTI2MCw3ICsyNjAsNyBAQCBzdGF0aWMgaW50
IG10a19jcHVmcmVxX2h3X2NwdV9pbml0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+
Pj4gCXJldHVybiAwOwo+Pj4gfQo+Pj4gCj4+Pi1zdGF0aWMgaW50IG10a19jcHVmcmVxX2h3X2Nw
dV9leGl0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+Pj4rc3RhdGljIHZvaWQgbXRr
X2NwdWZyZXFfaHdfY3B1X2V4aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PiB7
Cj4+PiAJc3RydWN0IG10a19jcHVmcmVxX2RhdGEgKmRhdGEgPSBwb2xpY3ktPmRyaXZlcl9kYXRh
Owo+Pj4gCXN0cnVjdCByZXNvdXJjZSAqcmVzID0gZGF0YS0+cmVzOwo+Pj5AQCAtMjcwLDggKzI3
MCw2IEBAIHN0YXRpYyBpbnQgbXRrX2NwdWZyZXFfaHdfY3B1X2V4aXQoc3RydWN0IGNwdWZyZXFf
cG9saWN5ICpwb2xpY3kpCj4+PiAJd3JpdGVsX3JlbGF4ZWQoMHgwLCBkYXRhLT5yZWdfYmFzZXNb
UkVHX0ZSRVFfRU5BQkxFXSk7Cj4+PiAJaW91bm1hcChiYXNlKTsKPj4+IAlyZWxlYXNlX21lbV9y
ZWdpb24ocmVzLT5zdGFydCwgcmVzb3VyY2Vfc2l6ZShyZXMpKTsKPj4+LQo+Pj4tCXJldHVybiAw
Owo+Pj4gfQo+Pj4gCj4+PiBzdGF0aWMgdm9pZCBtdGtfY3B1ZnJlcV9yZWdpc3Rlcl9lbShzdHJ1
Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+ZGlmZiAtLWdpdCBhL2RyaXZlcnMvY3B1ZnJl
cS9tZWRpYXRlay1jcHVmcmVxLmMgYi9kcml2ZXJzL2NwdWZyZXEvbWVkaWF0ZWstY3B1ZnJlcS5j
Cj4+PmluZGV4IGEwYTYxOTE5YmM0Yy4uYWJhMzRmYjc5NDhlIDEwMDY0NAo+Pj4tLS0gYS9kcml2
ZXJzL2NwdWZyZXEvbWVkaWF0ZWstY3B1ZnJlcS5jCj4+PisrKyBiL2RyaXZlcnMvY3B1ZnJlcS9t
ZWRpYXRlay1jcHVmcmVxLmMKPj4+QEAgLTU5OSwxMyArNTk5LDExIEBAIHN0YXRpYyBpbnQgbXRr
X2NwdWZyZXFfaW5pdChzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+IAlyZXR1cm4g
MDsKPj4+IH0KPj4+IAo+Pj4tc3RhdGljIGludCBtdGtfY3B1ZnJlcV9leGl0KHN0cnVjdCBjcHVm
cmVxX3BvbGljeSAqcG9saWN5KQo+Pj4rc3RhdGljIHZvaWQgbXRrX2NwdWZyZXFfZXhpdChzdHJ1
Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+IHsKPj4+IAlzdHJ1Y3QgbXRrX2NwdV9kdmZz
X2luZm8gKmluZm8gPSBwb2xpY3ktPmRyaXZlcl9kYXRhOwo+Pj4gCj4+PiAJZGV2X3BtX29wcF9m
cmVlX2NwdWZyZXFfdGFibGUoaW5mby0+Y3B1X2RldiwgJnBvbGljeS0+ZnJlcV90YWJsZSk7Cj4+
Pi0KPj4+LQlyZXR1cm4gMDsKPj4+IH0KPj4+IAo+Pj4gc3RhdGljIHN0cnVjdCBjcHVmcmVxX2Ry
aXZlciBtdGtfY3B1ZnJlcV9kcml2ZXIgPSB7Cj4+PmRpZmYgLS1naXQgYS9kcml2ZXJzL2NwdWZy
ZXEvb21hcC1jcHVmcmVxLmMgYi9kcml2ZXJzL2NwdWZyZXEvb21hcC1jcHVmcmVxLmMKPj4+aW5k
ZXggODk1NjkwODU2NjY1Li4zNDU4ZDVjYzliN2YgMTAwNjQ0Cj4+Pi0tLSBhL2RyaXZlcnMvY3B1
ZnJlcS9vbWFwLWNwdWZyZXEuYwo+Pj4rKysgYi9kcml2ZXJzL2NwdWZyZXEvb21hcC1jcHVmcmVx
LmMKPj4+QEAgLTEzNSwxMSArMTM1LDEwIEBAIHN0YXRpYyBpbnQgb21hcF9jcHVfaW5pdChzdHJ1
Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+IAlyZXR1cm4gMDsKPj4+IH0KPj4+IAo+Pj4t
c3RhdGljIGludCBvbWFwX2NwdV9leGl0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+
Pj4rc3RhdGljIHZvaWQgb21hcF9jcHVfZXhpdChzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGlj
eSkKPj4+IHsKPj4+IAlmcmVxX3RhYmxlX2ZyZWUoKTsKPj4+IAljbGtfcHV0KHBvbGljeS0+Y2xr
KTsKPj4+LQlyZXR1cm4gMDsKPj4+IH0KPj4+IAo+Pj4gc3RhdGljIHN0cnVjdCBjcHVmcmVxX2Ry
aXZlciBvbWFwX2RyaXZlciA9IHsKPj4+ZGlmZiAtLWdpdCBhL2RyaXZlcnMvY3B1ZnJlcS9wYXNl
bWktY3B1ZnJlcS5jIGIvZHJpdmVycy9jcHVmcmVxL3Bhc2VtaS1jcHVmcmVxLmMKPj4+aW5kZXgg
MDM5YTY2YmJlMWJlLi5lZTkyNWI1M2I2YjkgMTAwNjQ0Cj4+Pi0tLSBhL2RyaXZlcnMvY3B1ZnJl
cS9wYXNlbWktY3B1ZnJlcS5jCj4+PisrKyBiL2RyaXZlcnMvY3B1ZnJlcS9wYXNlbWktY3B1ZnJl
cS5jCj4+PkBAIC0yMDQsMjEgKzIwNCwxOSBAQCBzdGF0aWMgaW50IHBhc19jcHVmcmVxX2NwdV9p
bml0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+Pj4gCXJldHVybiBlcnI7Cj4+PiB9
Cj4+PiAKPj4+LXN0YXRpYyBpbnQgcGFzX2NwdWZyZXFfY3B1X2V4aXQoc3RydWN0IGNwdWZyZXFf
cG9saWN5ICpwb2xpY3kpCj4+PitzdGF0aWMgdm9pZCBwYXNfY3B1ZnJlcV9jcHVfZXhpdChzdHJ1
Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+IHsKPj4+IAkvKgo+Pj4gCSAqIFdlIGRvbid0
IHN1cHBvcnQgQ1BVIGhvdHBsdWcuIERvbid0IHVubWFwIGFmdGVyIHRoZSBzeXN0ZW0KPj4+IAkg
KiBoYXMgYWxyZWFkeSBtYWRlIGl0IHRvIGEgcnVubmluZyBzdGF0ZS4KPj4+IAkgKi8KPj4+IAlp
ZiAoc3lzdGVtX3N0YXRlID49IFNZU1RFTV9SVU5OSU5HKQo+Pj4tCQlyZXR1cm4gMDsKPj4+KwkJ
cmV0dXJuOwo+Pj4gCj4+PiAJaWYgKHNkY2Fzcl9tYXBiYXNlKQo+Pj4gCQlpb3VubWFwKHNkY2Fz
cl9tYXBiYXNlKTsKPj4+IAlpZiAoc2RjcHdyX21hcGJhc2UpCj4+PiAJCWlvdW5tYXAoc2RjcHdy
X21hcGJhc2UpOwo+Pj4tCj4+Pi0JcmV0dXJuIDA7Cj4+PiB9Cj4+PiAKPj4+IHN0YXRpYyBpbnQg
cGFzX2NwdWZyZXFfdGFyZ2V0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5LAo+Pj5kaWZm
IC0tZ2l0IGEvZHJpdmVycy9jcHVmcmVxL3Bvd2Vybm93LWs2LmMgYi9kcml2ZXJzL2NwdWZyZXEv
cG93ZXJub3ctazYuYwo+Pj5pbmRleCA0MWVlZmVmOTVkODcuLjE1NmJlYzZjNTQyMCAxMDA2NDQK
Pj4+LS0tIGEvZHJpdmVycy9jcHVmcmVxL3Bvd2Vybm93LWs2LmMKPj4+KysrIGIvZHJpdmVycy9j
cHVmcmVxL3Bvd2Vybm93LWs2LmMKPj4+QEAgLTIxOSw3ICsyMTksNyBAQCBzdGF0aWMgaW50IHBv
d2Vybm93X2s2X2NwdV9pbml0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+Pj4gfQo+
Pj4gCj4+PiAKPj4+LXN0YXRpYyBpbnQgcG93ZXJub3dfazZfY3B1X2V4aXQoc3RydWN0IGNwdWZy
ZXFfcG9saWN5ICpwb2xpY3kpCj4+PitzdGF0aWMgdm9pZCBwb3dlcm5vd19rNl9jcHVfZXhpdChz
dHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+IHsKPj4+IAl1bnNpZ25lZCBpbnQgaTsK
Pj4+IAo+Pj5AQCAtMjM3LDcgKzIzNyw2IEBAIHN0YXRpYyBpbnQgcG93ZXJub3dfazZfY3B1X2V4
aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PiAJCQlicmVhazsKPj4+IAkJfQo+
Pj4gCX0KPj4+LQlyZXR1cm4gMDsKPj4+IH0KPj4+IAo+Pj4gc3RhdGljIHVuc2lnbmVkIGludCBw
b3dlcm5vd19rNl9nZXQodW5zaWduZWQgaW50IGNwdSkKPj4+ZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Y3B1ZnJlcS9wb3dlcm5vdy1rNy5jIGIvZHJpdmVycy9jcHVmcmVxL3Bvd2Vybm93LWs3LmMKPj4+
aW5kZXggNWQ1MTVmYzM0ODM2Li40MjcxNDQ2Yzg3MjUgMTAwNjQ0Cj4+Pi0tLSBhL2RyaXZlcnMv
Y3B1ZnJlcS9wb3dlcm5vdy1rNy5jCj4+PisrKyBiL2RyaXZlcnMvY3B1ZnJlcS9wb3dlcm5vdy1r
Ny5jCj4+PkBAIC02NDQsNyArNjQ0LDcgQEAgc3RhdGljIGludCBwb3dlcm5vd19jcHVfaW5pdChz
dHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+IAlyZXR1cm4gMDsKPj4+IH0KPj4+IAo+
Pj4tc3RhdGljIGludCBwb3dlcm5vd19jcHVfZXhpdChzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBv
bGljeSkKPj4+K3N0YXRpYyB2b2lkIHBvd2Vybm93X2NwdV9leGl0KHN0cnVjdCBjcHVmcmVxX3Bv
bGljeSAqcG9saWN5KQo+Pj4gewo+Pj4gI2lmZGVmIENPTkZJR19YODZfUE9XRVJOT1dfSzdfQUNQ
SQo+Pj4gCWlmIChhY3BpX3Byb2Nlc3Nvcl9wZXJmKSB7Cj4+PkBAIC02NTUsNyArNjU1LDYgQEAg
c3RhdGljIGludCBwb3dlcm5vd19jcHVfZXhpdChzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGlj
eSkKPj4+ICNlbmRpZgo+Pj4gCj4+PiAJa2ZyZWUocG93ZXJub3dfdGFibGUpOwo+Pj4tCXJldHVy
biAwOwo+Pj4gfQo+Pj4gCj4+PiBzdGF0aWMgc3RydWN0IGNwdWZyZXFfZHJpdmVyIHBvd2Vybm93
X2RyaXZlciA9IHsKPj4+ZGlmZiAtLWdpdCBhL2RyaXZlcnMvY3B1ZnJlcS9wb3dlcm5vdy1rOC5j
IGIvZHJpdmVycy9jcHVmcmVxL3Bvd2Vybm93LWs4LmMKPj4+aW5kZXggYjEwZjdhMWI3N2YxLi41
ZTY2M2MzYTY3MzYgMTAwNjQ0Cj4+Pi0tLSBhL2RyaXZlcnMvY3B1ZnJlcS9wb3dlcm5vdy1rOC5j
Cj4+PisrKyBiL2RyaXZlcnMvY3B1ZnJlcS9wb3dlcm5vdy1rOC5jCj4+PkBAIC0xMDg5LDcgKzEw
ODksNyBAQCBzdGF0aWMgaW50IHBvd2Vybm93azhfY3B1X2luaXQoc3RydWN0IGNwdWZyZXFfcG9s
aWN5ICpwb2wpCj4+PiAJcmV0dXJuIC1FTk9ERVY7Cj4+PiB9Cj4+PiAKPj4+LXN0YXRpYyBpbnQg
cG93ZXJub3drOF9jcHVfZXhpdChzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbCkKPj4+K3N0YXRp
YyB2b2lkIHBvd2Vybm93azhfY3B1X2V4aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2wpCj4+
PiB7Cj4+PiAJc3RydWN0IHBvd2Vybm93X2s4X2RhdGEgKmRhdGEgPSBwZXJfY3B1KHBvd2Vybm93
X2RhdGEsIHBvbC0+Y3B1KTsKPj4+IAlpbnQgY3B1Owo+Pj5AQCAtMTEwNCw4ICsxMTA0LDYgQEAg
c3RhdGljIGludCBwb3dlcm5vd2s4X2NwdV9leGl0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9s
KQo+Pj4gCS8qIHBvbC0+Y3B1cyB3aWxsIGJlIGVtcHR5IGhlcmUsIHVzZSByZWxhdGVkX2NwdXMg
aW5zdGVhZC4gKi8KPj4+IAlmb3JfZWFjaF9jcHUoY3B1LCBwb2wtPnJlbGF0ZWRfY3B1cykKPj4+
IAkJcGVyX2NwdShwb3dlcm5vd19kYXRhLCBjcHUpID0gTlVMTDsKPj4+LQo+Pj4tCXJldHVybiAw
Owo+Pj4gfQo+Pj4gCj4+PiBzdGF0aWMgdm9pZCBxdWVyeV92YWx1ZXNfb25fY3B1KHZvaWQgKl9l
cnIpCj4+PmRpZmYgLS1naXQgYS9kcml2ZXJzL2NwdWZyZXEvcG93ZXJudi1jcHVmcmVxLmMgYi9k
cml2ZXJzL2NwdWZyZXEvcG93ZXJudi1jcHVmcmVxLmMKPj4+aW5kZXggZmRkYmQxZWExNjM1Li41
MGM2MjkyOWY3Y2EgMTAwNjQ0Cj4+Pi0tLSBhL2RyaXZlcnMvY3B1ZnJlcS9wb3dlcm52LWNwdWZy
ZXEuYwo+Pj4rKysgYi9kcml2ZXJzL2NwdWZyZXEvcG93ZXJudi1jcHVmcmVxLmMKPj4+QEAgLTg3
NCw3ICs4NzQsNyBAQCBzdGF0aWMgaW50IHBvd2VybnZfY3B1ZnJlcV9jcHVfaW5pdChzdHJ1Y3Qg
Y3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+IAlyZXR1cm4gMDsKPj4+IH0KPj4+IAo+Pj4tc3Rh
dGljIGludCBwb3dlcm52X2NwdWZyZXFfY3B1X2V4aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpw
b2xpY3kpCj4+PitzdGF0aWMgdm9pZCBwb3dlcm52X2NwdWZyZXFfY3B1X2V4aXQoc3RydWN0IGNw
dWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PiB7Cj4+PiAJc3RydWN0IHBvd2VybnZfc21wX2NhbGxf
ZGF0YSBmcmVxX2RhdGE7Cj4+PiAJc3RydWN0IGdsb2JhbF9wc3RhdGVfaW5mbyAqZ3BzdGF0ZXMg
PSBwb2xpY3ktPmRyaXZlcl9kYXRhOwo+Pj5AQCAtODg2LDggKzg4Niw2IEBAIHN0YXRpYyBpbnQg
cG93ZXJudl9jcHVmcmVxX2NwdV9leGl0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+
Pj4gCQlkZWxfdGltZXJfc3luYygmZ3BzdGF0ZXMtPnRpbWVyKTsKPj4+IAo+Pj4gCWtmcmVlKHBv
bGljeS0+ZHJpdmVyX2RhdGEpOwo+Pj4tCj4+Pi0JcmV0dXJuIDA7Cj4+PiB9Cj4+PiAKPj4+IHN0
YXRpYyBpbnQgcG93ZXJudl9jcHVmcmVxX3JlYm9vdF9ub3RpZmllcihzdHJ1Y3Qgbm90aWZpZXJf
YmxvY2sgKm5iLAo+Pj5kaWZmIC0tZ2l0IGEvZHJpdmVycy9jcHVmcmVxL3BwY19jYmVfY3B1ZnJl
cS5jIGIvZHJpdmVycy9jcHVmcmVxL3BwY19jYmVfY3B1ZnJlcS5jCj4+PmluZGV4IDg4YWZjNDk5
NDFiNy4uNWVlNGM3YmZkY2M1IDEwMDY0NAo+Pj4tLS0gYS9kcml2ZXJzL2NwdWZyZXEvcHBjX2Ni
ZV9jcHVmcmVxLmMKPj4+KysrIGIvZHJpdmVycy9jcHVmcmVxL3BwY19jYmVfY3B1ZnJlcS5jCj4+
PkBAIC0xMTMsMTAgKzExMyw5IEBAIHN0YXRpYyBpbnQgY2JlX2NwdWZyZXFfY3B1X2luaXQoc3Ry
dWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PiAJcmV0dXJuIDA7Cj4+PiB9Cj4+PiAKPj4+
LXN0YXRpYyBpbnQgY2JlX2NwdWZyZXFfY3B1X2V4aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpw
b2xpY3kpCj4+PitzdGF0aWMgdm9pZCBjYmVfY3B1ZnJlcV9jcHVfZXhpdChzdHJ1Y3QgY3B1ZnJl
cV9wb2xpY3kgKnBvbGljeSkKPj4+IHsKPj4+IAljYmVfY3B1ZnJlcV9wbWlfcG9saWN5X2V4aXQo
cG9saWN5KTsKPj4+LQlyZXR1cm4gMDsKPj4+IH0KPj4+IAo+Pj4gc3RhdGljIGludCBjYmVfY3B1
ZnJlcV90YXJnZXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3ksCj4+PmRpZmYgLS1naXQg
YS9kcml2ZXJzL2NwdWZyZXEvcWNvbS1jcHVmcmVxLWh3LmMgYi9kcml2ZXJzL2NwdWZyZXEvcWNv
bS1jcHVmcmVxLWh3LmMKPj4+aW5kZXggNzBiMGYyMTk2OGEwLi5iYjgxODExMTE2MmQgMTAwNjQ0
Cj4+Pi0tLSBhL2RyaXZlcnMvY3B1ZnJlcS9xY29tLWNwdWZyZXEtaHcuYwo+Pj4rKysgYi9kcml2
ZXJzL2NwdWZyZXEvcWNvbS1jcHVmcmVxLWh3LmMKPj4+QEAgLTU3Myw3ICs1NzMsNyBAQCBzdGF0
aWMgaW50IHFjb21fY3B1ZnJlcV9od19jcHVfaW5pdChzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBv
bGljeSkKPj4+IAlyZXR1cm4gcWNvbV9jcHVmcmVxX2h3X2xtaF9pbml0KHBvbGljeSwgaW5kZXgp
Owo+Pj4gfQo+Pj4gCj4+Pi1zdGF0aWMgaW50IHFjb21fY3B1ZnJlcV9od19jcHVfZXhpdChzdHJ1
Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+K3N0YXRpYyB2b2lkIHFjb21fY3B1ZnJlcV9o
d19jcHVfZXhpdChzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+IHsKPj4+IAlzdHJ1
Y3QgZGV2aWNlICpjcHVfZGV2ID0gZ2V0X2NwdV9kZXZpY2UocG9saWN5LT5jcHUpOwo+Pj4gCXN0
cnVjdCBxY29tX2NwdWZyZXFfZGF0YSAqZGF0YSA9IHBvbGljeS0+ZHJpdmVyX2RhdGE7Cj4+PkBA
IC01ODMsOCArNTgzLDYgQEAgc3RhdGljIGludCBxY29tX2NwdWZyZXFfaHdfY3B1X2V4aXQoc3Ry
dWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PiAJcWNvbV9jcHVmcmVxX2h3X2xtaF9leGl0
KGRhdGEpOwo+Pj4gCWtmcmVlKHBvbGljeS0+ZnJlcV90YWJsZSk7Cj4+PiAJa2ZyZWUoZGF0YSk7
Cj4+Pi0KPj4+LQlyZXR1cm4gMDsKPj4+IH0KPj4+IAo+Pj4gc3RhdGljIHZvaWQgcWNvbV9jcHVm
cmVxX3JlYWR5KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+Pj5kaWZmIC0tZ2l0IGEv
ZHJpdmVycy9jcHVmcmVxL3FvcmlxLWNwdWZyZXEuYyBiL2RyaXZlcnMvY3B1ZnJlcS9xb3JpcS1j
cHVmcmVxLmMKPj4+aW5kZXggMGFlY2FlY2JiMGU2Li4zNTE5YmYzNGQzOTcgMTAwNjQ0Cj4+Pi0t
LSBhL2RyaXZlcnMvY3B1ZnJlcS9xb3JpcS1jcHVmcmVxLmMKPj4+KysrIGIvZHJpdmVycy9jcHVm
cmVxL3FvcmlxLWNwdWZyZXEuYwo+Pj5AQCAtMjI1LDcgKzIyNSw3IEBAIHN0YXRpYyBpbnQgcW9y
aXFfY3B1ZnJlcV9jcHVfaW5pdChzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+IAly
ZXR1cm4gLUVOT0RFVjsKPj4+IH0KPj4+IAo+Pj4tc3RhdGljIGludCBxb3JpcV9jcHVmcmVxX2Nw
dV9leGl0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+Pj4rc3RhdGljIHZvaWQgcW9y
aXFfY3B1ZnJlcV9jcHVfZXhpdChzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+IHsK
Pj4+IAlzdHJ1Y3QgY3B1X2RhdGEgKmRhdGEgPSBwb2xpY3ktPmRyaXZlcl9kYXRhOwo+Pj4gCj4+
PkBAIC0yMzMsOCArMjMzLDYgQEAgc3RhdGljIGludCBxb3JpcV9jcHVmcmVxX2NwdV9leGl0KHN0
cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+Pj4gCWtmcmVlKGRhdGEtPnRhYmxlKTsKPj4+
IAlrZnJlZShkYXRhKTsKPj4+IAlwb2xpY3ktPmRyaXZlcl9kYXRhID0gTlVMTDsKPj4+LQo+Pj4t
CXJldHVybiAwOwo+Pj4gfQo+Pj4gCj4+PiBzdGF0aWMgaW50IHFvcmlxX2NwdWZyZXFfdGFyZ2V0
KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5LAo+Pj5kaWZmIC0tZ2l0IGEvZHJpdmVycy9j
cHVmcmVxL3NjbWktY3B1ZnJlcS5jIGIvZHJpdmVycy9jcHVmcmVxL3NjbWktY3B1ZnJlcS5jCj4+
PmluZGV4IDNiNGY2YmZiMmY0Yy4uYmY1ZjE3ZjBkZmIxIDEwMDY0NAo+Pj4tLS0gYS9kcml2ZXJz
L2NwdWZyZXEvc2NtaS1jcHVmcmVxLmMKPj4+KysrIGIvZHJpdmVycy9jcHVmcmVxL3NjbWktY3B1
ZnJlcS5jCj4+PkBAIC0zMDgsNyArMzA4LDcgQEAgc3RhdGljIGludCBzY21pX2NwdWZyZXFfaW5p
dChzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+IAlyZXR1cm4gcmV0Owo+Pj4gfQo+
Pj4gCj4+Pi1zdGF0aWMgaW50IHNjbWlfY3B1ZnJlcV9leGl0KHN0cnVjdCBjcHVmcmVxX3BvbGlj
eSAqcG9saWN5KQo+Pj4rc3RhdGljIHZvaWQgc2NtaV9jcHVmcmVxX2V4aXQoc3RydWN0IGNwdWZy
ZXFfcG9saWN5ICpwb2xpY3kpCj4+PiB7Cj4+PiAJc3RydWN0IHNjbWlfZGF0YSAqcHJpdiA9IHBv
bGljeS0+ZHJpdmVyX2RhdGE7Cj4+PiAKPj4+QEAgLTMxNiw4ICszMTYsNiBAQCBzdGF0aWMgaW50
IHNjbWlfY3B1ZnJlcV9leGl0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+Pj4gCWRl
dl9wbV9vcHBfcmVtb3ZlX2FsbF9keW5hbWljKHByaXYtPmNwdV9kZXYpOwo+Pj4gCWZyZWVfY3B1
bWFza192YXIocHJpdi0+b3BwX3NoYXJlZF9jcHVzKTsKPj4+IAlrZnJlZShwcml2KTsKPj4+LQo+
Pj4tCXJldHVybiAwOwo+Pj4gfQo+Pj4gCj4+PiBzdGF0aWMgdm9pZCBzY21pX2NwdWZyZXFfcmVn
aXN0ZXJfZW0oc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PmRpZmYgLS1naXQgYS9k
cml2ZXJzL2NwdWZyZXEvc2NwaS1jcHVmcmVxLmMgYi9kcml2ZXJzL2NwdWZyZXEvc2NwaS1jcHVm
cmVxLmMKPj4+aW5kZXggZDMzYmU1Njk4M2VkLi44ZDczZTZlOGJlMmEgMTAwNjQ0Cj4+Pi0tLSBh
L2RyaXZlcnMvY3B1ZnJlcS9zY3BpLWNwdWZyZXEuYwo+Pj4rKysgYi9kcml2ZXJzL2NwdWZyZXEv
c2NwaS1jcHVmcmVxLmMKPj4+QEAgLTE2Nyw3ICsxNjcsNyBAQCBzdGF0aWMgaW50IHNjcGlfY3B1
ZnJlcV9pbml0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+Pj4gCXJldHVybiByZXQ7
Cj4+PiB9Cj4+PiAKPj4+LXN0YXRpYyBpbnQgc2NwaV9jcHVmcmVxX2V4aXQoc3RydWN0IGNwdWZy
ZXFfcG9saWN5ICpwb2xpY3kpCj4+PitzdGF0aWMgdm9pZCBzY3BpX2NwdWZyZXFfZXhpdChzdHJ1
Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+IHsKPj4+IAlzdHJ1Y3Qgc2NwaV9kYXRhICpw
cml2ID0gcG9saWN5LT5kcml2ZXJfZGF0YTsKPj4+IAo+Pj5AQCAtMTc1LDggKzE3NSw2IEBAIHN0
YXRpYyBpbnQgc2NwaV9jcHVmcmVxX2V4aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kp
Cj4+PiAJZGV2X3BtX29wcF9mcmVlX2NwdWZyZXFfdGFibGUocHJpdi0+Y3B1X2RldiwgJnBvbGlj
eS0+ZnJlcV90YWJsZSk7Cj4+PiAJZGV2X3BtX29wcF9yZW1vdmVfYWxsX2R5bmFtaWMocHJpdi0+
Y3B1X2Rldik7Cj4+PiAJa2ZyZWUocHJpdik7Cj4+Pi0KPj4+LQlyZXR1cm4gMDsKPj4+IH0KPj4+
IAo+Pj4gc3RhdGljIHN0cnVjdCBjcHVmcmVxX2RyaXZlciBzY3BpX2NwdWZyZXFfZHJpdmVyID0g
ewo+Pj5kaWZmIC0tZ2l0IGEvZHJpdmVycy9jcHVmcmVxL3NoLWNwdWZyZXEuYyBiL2RyaXZlcnMv
Y3B1ZnJlcS9zaC1jcHVmcmVxLmMKPj4+aW5kZXggYjg3MDQyMzJjMjdiLi5hYTc0MDM2ZDA0MjAg
MTAwNjQ0Cj4+Pi0tLSBhL2RyaXZlcnMvY3B1ZnJlcS9zaC1jcHVmcmVxLmMKPj4+KysrIGIvZHJp
dmVycy9jcHVmcmVxL3NoLWNwdWZyZXEuYwo+Pj5AQCAtMTM1LDE0ICsxMzUsMTIgQEAgc3RhdGlj
IGludCBzaF9jcHVmcmVxX2NwdV9pbml0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+
Pj4gCXJldHVybiAwOwo+Pj4gfQo+Pj4gCj4+Pi1zdGF0aWMgaW50IHNoX2NwdWZyZXFfY3B1X2V4
aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PitzdGF0aWMgdm9pZCBzaF9jcHVm
cmVxX2NwdV9leGl0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+Pj4gewo+Pj4gCXVu
c2lnbmVkIGludCBjcHUgPSBwb2xpY3ktPmNwdTsKPj4+IAlzdHJ1Y3QgY2xrICpjcHVjbGsgPSAm
cGVyX2NwdShzaF9jcHVjbGssIGNwdSk7Cj4+PiAKPj4+IAljbGtfcHV0KGNwdWNsayk7Cj4+Pi0K
Pj4+LQlyZXR1cm4gMDsKPj4+IH0KPj4+IAo+Pj4gc3RhdGljIHN0cnVjdCBjcHVmcmVxX2RyaXZl
ciBzaF9jcHVmcmVxX2RyaXZlciA9IHsKPj4+ZGlmZiAtLWdpdCBhL2RyaXZlcnMvY3B1ZnJlcS9z
cGFyYy11czJlLWNwdWZyZXEuYyBiL2RyaXZlcnMvY3B1ZnJlcS9zcGFyYy11czJlLWNwdWZyZXEu
Ywo+Pj5pbmRleCAyNzgzZDNkNTVmY2UuLjhhMGNkNTMxMmE1OSAxMDA2NDQKPj4+LS0tIGEvZHJp
dmVycy9jcHVmcmVxL3NwYXJjLXVzMmUtY3B1ZnJlcS5jCj4+PisrKyBiL2RyaXZlcnMvY3B1ZnJl
cS9zcGFyYy11czJlLWNwdWZyZXEuYwo+Pj5AQCAtMjk2LDEwICsyOTYsOSBAQCBzdGF0aWMgaW50
IHVzMmVfZnJlcV9jcHVfaW5pdChzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+IAly
ZXR1cm4gMDsKPj4+IH0KPj4+IAo+Pj4tc3RhdGljIGludCB1czJlX2ZyZXFfY3B1X2V4aXQoc3Ry
dWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PitzdGF0aWMgdm9pZCB1czJlX2ZyZXFfY3B1
X2V4aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PiB7Cj4+PiAJdXMyZV9mcmVx
X3RhcmdldChwb2xpY3ksIDApOwo+Pj4tCXJldHVybiAwOwo+Pj4gfQo+Pj4gCj4+PiBzdGF0aWMg
c3RydWN0IGNwdWZyZXFfZHJpdmVyIGNwdWZyZXFfdXMyZV9kcml2ZXIgPSB7Cj4+PmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2NwdWZyZXEvc3BhcmMtdXMzLWNwdWZyZXEuYyBiL2RyaXZlcnMvY3B1ZnJl
cS9zcGFyYy11czMtY3B1ZnJlcS5jCj4+PmluZGV4IDZjMzY1NzY3OWE4OC4uYjUwZjlkMTNlNmQy
IDEwMDY0NAo+Pj4tLS0gYS9kcml2ZXJzL2NwdWZyZXEvc3BhcmMtdXMzLWNwdWZyZXEuYwo+Pj4r
KysgYi9kcml2ZXJzL2NwdWZyZXEvc3BhcmMtdXMzLWNwdWZyZXEuYwo+Pj5AQCAtMTQwLDEwICsx
NDAsOSBAQCBzdGF0aWMgaW50IHVzM19mcmVxX2NwdV9pbml0KHN0cnVjdCBjcHVmcmVxX3BvbGlj
eSAqcG9saWN5KQo+Pj4gCXJldHVybiAwOwo+Pj4gfQo+Pj4gCj4+Pi1zdGF0aWMgaW50IHVzM19m
cmVxX2NwdV9leGl0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5KQo+Pj4rc3RhdGljIHZv
aWQgdXMzX2ZyZXFfY3B1X2V4aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PiB7
Cj4+PiAJdXMzX2ZyZXFfdGFyZ2V0KHBvbGljeSwgMCk7Cj4+Pi0JcmV0dXJuIDA7Cj4+PiB9Cj4+
PiAKPj4+IHN0YXRpYyBzdHJ1Y3QgY3B1ZnJlcV9kcml2ZXIgY3B1ZnJlcV91czNfZHJpdmVyID0g
ewo+Pj5kaWZmIC0tZ2l0IGEvZHJpdmVycy9jcHVmcmVxL3NwZWVkc3RlcC1jZW50cmluby5jIGIv
ZHJpdmVycy9jcHVmcmVxL3NwZWVkc3RlcC1jZW50cmluby5jCj4+PmluZGV4IDc1YjEwZWNkYjYw
Zi4uMjhlNjViY2Y3MjQyIDEwMDY0NAo+Pj4tLS0gYS9kcml2ZXJzL2NwdWZyZXEvc3BlZWRzdGVw
LWNlbnRyaW5vLmMKPj4+KysrIGIvZHJpdmVycy9jcHVmcmVxL3NwZWVkc3RlcC1jZW50cmluby5j
Cj4+PkBAIC00MDAsNyArNDAwLDcgQEAgc3RhdGljIGludCBjZW50cmlub19jcHVfaW5pdChzdHJ1
Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+IAlyZXR1cm4gMDsKPj4+IH0KPj4+IAo+Pj4t
c3RhdGljIGludCBjZW50cmlub19jcHVfZXhpdChzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGlj
eSkKPj4+K3N0YXRpYyB2b2lkIGNlbnRyaW5vX2NwdV9leGl0KHN0cnVjdCBjcHVmcmVxX3BvbGlj
eSAqcG9saWN5KQo+Pj4gewo+Pj4gCXVuc2lnbmVkIGludCBjcHUgPSBwb2xpY3ktPmNwdTsKPj4+
IAo+Pj5AQCAtNDA4LDggKzQwOCw2IEBAIHN0YXRpYyBpbnQgY2VudHJpbm9fY3B1X2V4aXQoc3Ry
dWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PiAJCXJldHVybiAtRU5PREVWOwo+Pj4gCj4+
PiAJcGVyX2NwdShjZW50cmlub19tb2RlbCwgY3B1KSA9IE5VTEw7Cj4+Pi0KPj4+LQlyZXR1cm4g
MDsKPj4+IH0KPj4+IAo+Pj4gLyoqCj4+PmRpZmYgLS1naXQgYS9kcml2ZXJzL2NwdWZyZXEvdGVn
cmExOTQtY3B1ZnJlcS5jIGIvZHJpdmVycy9jcHVmcmVxL3RlZ3JhMTk0LWNwdWZyZXEuYwo+Pj5p
bmRleCA1OTg2NWVhNDU1YTguLjA3ZWE3ZWQ2MWI2OCAxMDA2NDQKPj4+LS0tIGEvZHJpdmVycy9j
cHVmcmVxL3RlZ3JhMTk0LWNwdWZyZXEuYwo+Pj4rKysgYi9kcml2ZXJzL2NwdWZyZXEvdGVncmEx
OTQtY3B1ZnJlcS5jCj4+PkBAIC01NTEsMTQgKzU1MSwxMiBAQCBzdGF0aWMgaW50IHRlZ3JhMTk0
X2NwdWZyZXFfb2ZmbGluZShzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+IAlyZXR1
cm4gMDsKPj4+IH0KPj4+IAo+Pj4tc3RhdGljIGludCB0ZWdyYTE5NF9jcHVmcmVxX2V4aXQoc3Ry
dWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PitzdGF0aWMgdm9pZCB0ZWdyYTE5NF9jcHVm
cmVxX2V4aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3kpCj4+PiB7Cj4+PiAJc3RydWN0
IGRldmljZSAqY3B1X2RldiA9IGdldF9jcHVfZGV2aWNlKHBvbGljeS0+Y3B1KTsKPj4+IAo+Pj4g
CWRldl9wbV9vcHBfcmVtb3ZlX2FsbF9keW5hbWljKGNwdV9kZXYpOwo+Pj4gCWRldl9wbV9vcHBf
b2ZfY3B1bWFza19yZW1vdmVfdGFibGUocG9saWN5LT5yZWxhdGVkX2NwdXMpOwo+Pj4tCj4+Pi0J
cmV0dXJuIDA7Cj4+PiB9Cj4+PiAKPj4+IHN0YXRpYyBpbnQgdGVncmExOTRfY3B1ZnJlcV9zZXRf
dGFyZ2V0KHN0cnVjdCBjcHVmcmVxX3BvbGljeSAqcG9saWN5LAo+Pj5kaWZmIC0tZ2l0IGEvZHJp
dmVycy9jcHVmcmVxL3ZleHByZXNzLXNwYy1jcHVmcmVxLmMgYi9kcml2ZXJzL2NwdWZyZXEvdmV4
cHJlc3Mtc3BjLWNwdWZyZXEuYwo+Pj5pbmRleCA5YWM0ZWE1MGI4NzQuLmIyYTQyY2RiOTU4MiAx
MDA2NDQKPj4+LS0tIGEvZHJpdmVycy9jcHVmcmVxL3ZleHByZXNzLXNwYy1jcHVmcmVxLmMKPj4+
KysrIGIvZHJpdmVycy9jcHVmcmVxL3ZleHByZXNzLXNwYy1jcHVmcmVxLmMKPj4+QEAgLTQ0Nyw3
ICs0NDcsNyBAQCBzdGF0aWMgaW50IHZlX3NwY19jcHVmcmVxX2luaXQoc3RydWN0IGNwdWZyZXFf
cG9saWN5ICpwb2xpY3kpCj4+PiAJcmV0dXJuIDA7Cj4+PiB9Cj4+PiAKPj4+LXN0YXRpYyBpbnQg
dmVfc3BjX2NwdWZyZXFfZXhpdChzdHJ1Y3QgY3B1ZnJlcV9wb2xpY3kgKnBvbGljeSkKPj4+K3N0
YXRpYyB2b2lkIHZlX3NwY19jcHVmcmVxX2V4aXQoc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xp
Y3kpCj4+PiB7Cj4+PiAJc3RydWN0IGRldmljZSAqY3B1X2RldjsKPj4+IAo+Pj5AQCAtNDU5LDcg
KzQ1OSw2IEBAIHN0YXRpYyBpbnQgdmVfc3BjX2NwdWZyZXFfZXhpdChzdHJ1Y3QgY3B1ZnJlcV9w
b2xpY3kgKnBvbGljeSkKPj4+IAl9Cj4+PiAKPj4+IAlwdXRfY2x1c3Rlcl9jbGtfYW5kX2ZyZXFf
dGFibGUoY3B1X2RldiwgcG9saWN5LT5yZWxhdGVkX2NwdXMpOwo+Pj4tCXJldHVybiAwOwo+Pj4g
fQo+Pj4gCj4+PiBzdGF0aWMgc3RydWN0IGNwdWZyZXFfZHJpdmVyIHZlX3NwY19jcHVmcmVxX2Ry
aXZlciA9IHsKPj4+LS0gCj4+PjIuMjUuMQo+PiAK
------=_Part_15090_85454238.1712759593886
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div style=3D"line-height:1.7;color:#000000;font-size:14px;font-family:Aria=
l"><div style=3D"margin: 0;">Hi=EF=BC=8C</div><div style=3D"margin: 0;">&nb=
sp; &nbsp; &nbsp;i have already change the definition of exit</div><div sty=
le=3D"margin: 0;">&nbsp; &nbsp; &nbsp;in struct cpu_freq_driver in include/=
linux/cpufreq.h</div><div style=3D"margin: 0;"><br></div><div style=3D"marg=
in: 0;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &n=
bsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; =
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=3D"font=
-size: 16px;"><b>&nbsp; &nbsp; &nbsp; Lizhe</b></span></div><div style=3D"m=
argin: 0;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &n=
bsp; Thanks</div><p style=3D"margin: 0;"><br></p><p style=3D"margin: 0;"><b=
r></p><p style=3D"margin: 0;"><br></p><p style=3D"margin: 0;"><br></p><div =
style=3D"position:relative;zoom:1"></div><div id=3D"divNeteaseMailCard"></d=
iv><p style=3D"margin: 0;"><br></p><pre><br>At 2024-04-10 21:55:56, "Christ=
ophe Leroy" &lt;christophe.leroy@csgroup.eu&gt; wrote:
&gt;
&gt;
&gt;Le 10/04/2024 =C3=A0 15:42, lizhe a =C3=A9crit&nbsp;:
&gt;&gt;=20
&gt;&gt; Hi=EF=BC=8C
&gt;&gt;  &nbsp; &nbsp; &nbsp;I have already tested it, it is functioning p=
roperly, Please review.
&gt;&gt;=20
&gt;&gt; *Lizhe*
&gt;&gt;                                                                   =
      =20
&gt;&gt;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &n=
bsp; &nbsp;Thanks
&gt;&gt;=20
&gt;
&gt;Please don't top-post, see=20
&gt;https://docs.kernel.org/process/submitting-patches.html?highlight=3Dmai=
ling+list+etiquette#use-trimmed-interleaved-replies-in-email-discussions
&gt;
&gt;Please always post in plain text (ASCII-only), never as an HTML message=
.
&gt;
&gt;And still, your changes cannot build without a change in the definition=
=20
&gt;of exit in struct cpu_freq driver in include/linux/cpufreq.h
&gt;Never submit a patch that doesn't build.
&gt;
&gt;Christophe
&gt;
&gt;&gt; At 2024-04-10 21:22:47, "Lizhe" &lt;sensor1010@163.com&gt; wrote:
&gt;&gt;&gt;For the exit() callback function returning an int type value.
&gt;&gt;&gt;this leads many driver authors mistakenly believing that error
&gt;&gt;&gt;handling can be performed by returning an error code. However.
&gt;&gt;&gt;the returned value is ignore, and to improve this situation.
&gt;&gt;&gt;it is proposed to modify the return type of the exit() callback
&gt;&gt;&gt;function to void
&gt;&gt;&gt;
&gt;&gt;&gt;Signed-off-by: Lizhe &lt;sensor1010@163.com&gt;
&gt;&gt;&gt;---
&gt;&gt;&gt; drivers/cpufreq/acpi-cpufreq.c         | 4 +---
&gt;&gt;&gt; drivers/cpufreq/amd-pstate.c           | 7 ++-----
&gt;&gt;&gt; drivers/cpufreq/apple-soc-cpufreq.c    | 4 +---
&gt;&gt;&gt; drivers/cpufreq/bmips-cpufreq.c        | 4 +---
&gt;&gt;&gt; drivers/cpufreq/cppc_cpufreq.c         | 3 +--
&gt;&gt;&gt; drivers/cpufreq/cpufreq-dt.c           | 3 +--
&gt;&gt;&gt; drivers/cpufreq/e_powersaver.c         | 3 +--
&gt;&gt;&gt; drivers/cpufreq/intel_pstate.c         | 4 +---
&gt;&gt;&gt; drivers/cpufreq/mediatek-cpufreq-hw.c  | 4 +---
&gt;&gt;&gt; drivers/cpufreq/mediatek-cpufreq.c     | 4 +---
&gt;&gt;&gt; drivers/cpufreq/omap-cpufreq.c         | 3 +--
&gt;&gt;&gt; drivers/cpufreq/pasemi-cpufreq.c       | 6 ++----
&gt;&gt;&gt; drivers/cpufreq/powernow-k6.c          | 3 +--
&gt;&gt;&gt; drivers/cpufreq/powernow-k7.c          | 3 +--
&gt;&gt;&gt; drivers/cpufreq/powernow-k8.c          | 4 +---
&gt;&gt;&gt; drivers/cpufreq/powernv-cpufreq.c      | 4 +---
&gt;&gt;&gt; drivers/cpufreq/ppc_cbe_cpufreq.c      | 3 +--
&gt;&gt;&gt; drivers/cpufreq/qcom-cpufreq-hw.c      | 4 +---
&gt;&gt;&gt; drivers/cpufreq/qoriq-cpufreq.c        | 4 +---
&gt;&gt;&gt; drivers/cpufreq/scmi-cpufreq.c         | 4 +---
&gt;&gt;&gt; drivers/cpufreq/scpi-cpufreq.c         | 4 +---
&gt;&gt;&gt; drivers/cpufreq/sh-cpufreq.c           | 4 +---
&gt;&gt;&gt; drivers/cpufreq/sparc-us2e-cpufreq.c   | 3 +--
&gt;&gt;&gt; drivers/cpufreq/sparc-us3-cpufreq.c    | 3 +--
&gt;&gt;&gt; drivers/cpufreq/speedstep-centrino.c   | 4 +---
&gt;&gt;&gt; drivers/cpufreq/tegra194-cpufreq.c     | 4 +---
&gt;&gt;&gt; drivers/cpufreq/vexpress-spc-cpufreq.c | 3 +--
&gt;&gt;&gt; 27 files changed, 29 insertions(+), 74 deletions(-)
&gt;&gt;&gt;
&gt;&gt;&gt;diff --git a/drivers/cpufreq/acpi-cpufreq.c b/drivers/cpufreq/a=
cpi-cpufreq.c
&gt;&gt;&gt;index 37f1cdf46d29..33f18140e9a4 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/acpi-cpufreq.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/acpi-cpufreq.c
&gt;&gt;&gt;@@ -906,7 +906,7 @@ static int acpi_cpufreq_cpu_init(struct cpu=
freq_policy *policy)
&gt;&gt;&gt; =09return result;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int acpi_cpufreq_cpu_exit(struct cpufreq_policy *policy=
)
&gt;&gt;&gt;+static void acpi_cpufreq_cpu_exit(struct cpufreq_policy *polic=
y)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09struct acpi_cpufreq_data *data =3D policy-&gt;driver_data;
&gt;&gt;&gt;=20
&gt;&gt;&gt;@@ -919,8 +919,6 @@ static int acpi_cpufreq_cpu_exit(struct cpu=
freq_policy *policy)
&gt;&gt;&gt; =09free_cpumask_var(data-&gt;freqdomain_cpus);
&gt;&gt;&gt; =09kfree(policy-&gt;freq_table);
&gt;&gt;&gt; =09kfree(data);
&gt;&gt;&gt;-
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static int acpi_cpufreq_resume(struct cpufreq_policy *policy)
&gt;&gt;&gt;diff --git a/drivers/cpufreq/amd-pstate.c b/drivers/cpufreq/amd=
-pstate.c
&gt;&gt;&gt;index 2015c9fcc3c9..60b3d20d5939 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/amd-pstate.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/amd-pstate.c
&gt;&gt;&gt;@@ -919,7 +919,7 @@ static int amd_pstate_cpu_init(struct cpufr=
eq_policy *policy)
&gt;&gt;&gt; =09return ret;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int amd_pstate_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt;+static void amd_pstate_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09struct amd_cpudata *cpudata =3D policy-&gt;driver_data;
&gt;&gt;&gt;=20
&gt;&gt;&gt;@@ -927,8 +927,6 @@ static int amd_pstate_cpu_exit(struct cpufr=
eq_policy *policy)
&gt;&gt;&gt; =09freq_qos_remove_request(&amp;cpudata-&gt;req[0]);
&gt;&gt;&gt; =09policy-&gt;fast_switch_possible =3D false;
&gt;&gt;&gt; =09kfree(cpudata);
&gt;&gt;&gt;-
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static int amd_pstate_cpu_resume(struct cpufreq_policy *policy=
)
&gt;&gt;&gt;@@ -1376,10 +1374,9 @@ static int amd_pstate_epp_cpu_init(struc=
t cpufreq_policy *policy)
&gt;&gt;&gt; =09return ret;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int amd_pstate_epp_cpu_exit(struct cpufreq_policy *poli=
cy)
&gt;&gt;&gt;+static void amd_pstate_epp_cpu_exit(struct cpufreq_policy *pol=
icy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09pr_debug("CPU %d exiting\n", policy-&gt;cpu);
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static void amd_pstate_epp_update_limit(struct cpufreq_policy =
*policy)
&gt;&gt;&gt;diff --git a/drivers/cpufreq/apple-soc-cpufreq.c b/drivers/cpuf=
req/apple-soc-cpufreq.c
&gt;&gt;&gt;index 021f423705e1..af34c22fa273 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/apple-soc-cpufreq.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/apple-soc-cpufreq.c
&gt;&gt;&gt;@@ -305,7 +305,7 @@ static int apple_soc_cpufreq_init(struct cp=
ufreq_policy *policy)
&gt;&gt;&gt; =09return ret;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int apple_soc_cpufreq_exit(struct cpufreq_policy *polic=
y)
&gt;&gt;&gt;+static void apple_soc_cpufreq_exit(struct cpufreq_policy *poli=
cy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09struct apple_cpu_priv *priv =3D policy-&gt;driver_data;
&gt;&gt;&gt;=20
&gt;&gt;&gt;@@ -313,8 +313,6 @@ static int apple_soc_cpufreq_exit(struct cp=
ufreq_policy *policy)
&gt;&gt;&gt; =09dev_pm_opp_remove_all_dynamic(priv-&gt;cpu_dev);
&gt;&gt;&gt; =09iounmap(priv-&gt;reg_base);
&gt;&gt;&gt; =09kfree(priv);
&gt;&gt;&gt;-
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static struct cpufreq_driver apple_soc_cpufreq_driver =3D {
&gt;&gt;&gt;diff --git a/drivers/cpufreq/bmips-cpufreq.c b/drivers/cpufreq/=
bmips-cpufreq.c
&gt;&gt;&gt;index 39221a9a187a..17a4c174553d 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/bmips-cpufreq.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/bmips-cpufreq.c
&gt;&gt;&gt;@@ -121,11 +121,9 @@ static int bmips_cpufreq_target_index(stru=
ct cpufreq_policy *policy,
&gt;&gt;&gt; =09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int bmips_cpufreq_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt;+static void bmips_cpufreq_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09kfree(policy-&gt;freq_table);
&gt;&gt;&gt;-
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static int bmips_cpufreq_init(struct cpufreq_policy *policy)
&gt;&gt;&gt;diff --git a/drivers/cpufreq/cppc_cpufreq.c b/drivers/cpufreq/c=
ppc_cpufreq.c
&gt;&gt;&gt;index 64420d9cfd1e..dccb9c1f087d 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/cppc_cpufreq.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/cppc_cpufreq.c
&gt;&gt;&gt;@@ -688,7 +688,7 @@ static int cppc_cpufreq_cpu_init(struct cpu=
freq_policy *policy)
&gt;&gt;&gt; =09return ret;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int cppc_cpufreq_cpu_exit(struct cpufreq_policy *policy=
)
&gt;&gt;&gt;+static void cppc_cpufreq_cpu_exit(struct cpufreq_policy *polic=
y)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09struct cppc_cpudata *cpu_data =3D policy-&gt;driver_data;
&gt;&gt;&gt; =09struct cppc_perf_caps *caps =3D &amp;cpu_data-&gt;perf_caps=
;
&gt;&gt;&gt;@@ -705,7 +705,6 @@ static int cppc_cpufreq_cpu_exit(struct cpu=
freq_policy *policy)
&gt;&gt;&gt; =09=09=09 caps-&gt;lowest_perf, cpu, ret);
&gt;&gt;&gt;=20
&gt;&gt;&gt; =09cppc_cpufreq_put_cpu_data(policy);
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static inline u64 get_delta(u64 t1, u64 t0)
&gt;&gt;&gt;diff --git a/drivers/cpufreq/cpufreq-dt.c b/drivers/cpufreq/cpu=
freq-dt.c
&gt;&gt;&gt;index 2d83bbc65dd0..eaf02579ea74 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/cpufreq-dt.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/cpufreq-dt.c
&gt;&gt;&gt;@@ -166,10 +166,9 @@ static int cpufreq_offline(struct cpufreq_=
policy *policy)
&gt;&gt;&gt; =09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int cpufreq_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt;+static void cpufreq_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09clk_put(policy-&gt;clk);
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static struct cpufreq_driver dt_cpufreq_driver =3D {
&gt;&gt;&gt;diff --git a/drivers/cpufreq/e_powersaver.c b/drivers/cpufreq/e=
_powersaver.c
&gt;&gt;&gt;index ab93bce8ae77..6e958b09e1b5 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/e_powersaver.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/e_powersaver.c
&gt;&gt;&gt;@@ -360,14 +360,13 @@ static int eps_cpu_init(struct cpufreq_po=
licy *policy)
&gt;&gt;&gt; =09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int eps_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt;+static void eps_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09unsigned int cpu =3D policy-&gt;cpu;
&gt;&gt;&gt;=20
&gt;&gt;&gt; =09/* Bye */
&gt;&gt;&gt; =09kfree(eps_cpu[cpu]);
&gt;&gt;&gt; =09eps_cpu[cpu] =3D NULL;
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static struct cpufreq_driver eps_driver =3D {
&gt;&gt;&gt;diff --git a/drivers/cpufreq/intel_pstate.c b/drivers/cpufreq/i=
ntel_pstate.c
&gt;&gt;&gt;index dbbf299f4219..aa435d24c20e 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/intel_pstate.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/intel_pstate.c
&gt;&gt;&gt;@@ -2731,13 +2731,11 @@ static int intel_pstate_cpu_offline(str=
uct cpufreq_policy *policy)
&gt;&gt;&gt; =09return intel_cpufreq_cpu_offline(policy);
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int intel_pstate_cpu_exit(struct cpufreq_policy *policy=
)
&gt;&gt;&gt;+static void intel_pstate_cpu_exit(struct cpufreq_policy *polic=
y)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09pr_debug("CPU %d exiting\n", policy-&gt;cpu);
&gt;&gt;&gt;=20
&gt;&gt;&gt; =09policy-&gt;fast_switch_possible =3D false;
&gt;&gt;&gt;-
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static int __intel_pstate_cpu_init(struct cpufreq_policy *poli=
cy)
&gt;&gt;&gt;diff --git a/drivers/cpufreq/mediatek-cpufreq-hw.c b/drivers/cp=
ufreq/mediatek-cpufreq-hw.c
&gt;&gt;&gt;index 8d097dcddda4..8925e096d5b9 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/mediatek-cpufreq-hw.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/mediatek-cpufreq-hw.c
&gt;&gt;&gt;@@ -260,7 +260,7 @@ static int mtk_cpufreq_hw_cpu_init(struct c=
pufreq_policy *policy)
&gt;&gt;&gt; =09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int mtk_cpufreq_hw_cpu_exit(struct cpufreq_policy *poli=
cy)
&gt;&gt;&gt;+static void mtk_cpufreq_hw_cpu_exit(struct cpufreq_policy *pol=
icy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09struct mtk_cpufreq_data *data =3D policy-&gt;driver_data;
&gt;&gt;&gt; =09struct resource *res =3D data-&gt;res;
&gt;&gt;&gt;@@ -270,8 +270,6 @@ static int mtk_cpufreq_hw_cpu_exit(struct c=
pufreq_policy *policy)
&gt;&gt;&gt; =09writel_relaxed(0x0, data-&gt;reg_bases[REG_FREQ_ENABLE]);
&gt;&gt;&gt; =09iounmap(base);
&gt;&gt;&gt; =09release_mem_region(res-&gt;start, resource_size(res));
&gt;&gt;&gt;-
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static void mtk_cpufreq_register_em(struct cpufreq_policy *pol=
icy)
&gt;&gt;&gt;diff --git a/drivers/cpufreq/mediatek-cpufreq.c b/drivers/cpufr=
eq/mediatek-cpufreq.c
&gt;&gt;&gt;index a0a61919bc4c..aba34fb7948e 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/mediatek-cpufreq.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/mediatek-cpufreq.c
&gt;&gt;&gt;@@ -599,13 +599,11 @@ static int mtk_cpufreq_init(struct cpufre=
q_policy *policy)
&gt;&gt;&gt; =09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int mtk_cpufreq_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt;+static void mtk_cpufreq_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09struct mtk_cpu_dvfs_info *info =3D policy-&gt;driver_data;
&gt;&gt;&gt;=20
&gt;&gt;&gt; =09dev_pm_opp_free_cpufreq_table(info-&gt;cpu_dev, &amp;policy=
-&gt;freq_table);
&gt;&gt;&gt;-
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static struct cpufreq_driver mtk_cpufreq_driver =3D {
&gt;&gt;&gt;diff --git a/drivers/cpufreq/omap-cpufreq.c b/drivers/cpufreq/o=
map-cpufreq.c
&gt;&gt;&gt;index 895690856665..3458d5cc9b7f 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/omap-cpufreq.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/omap-cpufreq.c
&gt;&gt;&gt;@@ -135,11 +135,10 @@ static int omap_cpu_init(struct cpufreq_p=
olicy *policy)
&gt;&gt;&gt; =09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int omap_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt;+static void omap_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09freq_table_free();
&gt;&gt;&gt; =09clk_put(policy-&gt;clk);
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static struct cpufreq_driver omap_driver =3D {
&gt;&gt;&gt;diff --git a/drivers/cpufreq/pasemi-cpufreq.c b/drivers/cpufreq=
/pasemi-cpufreq.c
&gt;&gt;&gt;index 039a66bbe1be..ee925b53b6b9 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/pasemi-cpufreq.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/pasemi-cpufreq.c
&gt;&gt;&gt;@@ -204,21 +204,19 @@ static int pas_cpufreq_cpu_init(struct cp=
ufreq_policy *policy)
&gt;&gt;&gt; =09return err;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int pas_cpufreq_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt;+static void pas_cpufreq_cpu_exit(struct cpufreq_policy *policy=
)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09/*
&gt;&gt;&gt; =09 * We don't support CPU hotplug. Don't unmap after the syst=
em
&gt;&gt;&gt; =09 * has already made it to a running state.
&gt;&gt;&gt; =09 */
&gt;&gt;&gt; =09if (system_state &gt;=3D SYSTEM_RUNNING)
&gt;&gt;&gt;-=09=09return 0;
&gt;&gt;&gt;+=09=09return;
&gt;&gt;&gt;=20
&gt;&gt;&gt; =09if (sdcasr_mapbase)
&gt;&gt;&gt; =09=09iounmap(sdcasr_mapbase);
&gt;&gt;&gt; =09if (sdcpwr_mapbase)
&gt;&gt;&gt; =09=09iounmap(sdcpwr_mapbase);
&gt;&gt;&gt;-
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static int pas_cpufreq_target(struct cpufreq_policy *policy,
&gt;&gt;&gt;diff --git a/drivers/cpufreq/powernow-k6.c b/drivers/cpufreq/po=
wernow-k6.c
&gt;&gt;&gt;index 41eefef95d87..156bec6c5420 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/powernow-k6.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/powernow-k6.c
&gt;&gt;&gt;@@ -219,7 +219,7 @@ static int powernow_k6_cpu_init(struct cpuf=
req_policy *policy)
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int powernow_k6_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt;+static void powernow_k6_cpu_exit(struct cpufreq_policy *policy=
)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09unsigned int i;
&gt;&gt;&gt;=20
&gt;&gt;&gt;@@ -237,7 +237,6 @@ static int powernow_k6_cpu_exit(struct cpuf=
req_policy *policy)
&gt;&gt;&gt; =09=09=09break;
&gt;&gt;&gt; =09=09}
&gt;&gt;&gt; =09}
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static unsigned int powernow_k6_get(unsigned int cpu)
&gt;&gt;&gt;diff --git a/drivers/cpufreq/powernow-k7.c b/drivers/cpufreq/po=
wernow-k7.c
&gt;&gt;&gt;index 5d515fc34836..4271446c8725 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/powernow-k7.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/powernow-k7.c
&gt;&gt;&gt;@@ -644,7 +644,7 @@ static int powernow_cpu_init(struct cpufreq=
_policy *policy)
&gt;&gt;&gt; =09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int powernow_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt;+static void powernow_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt; {
&gt;&gt;&gt; #ifdef CONFIG_X86_POWERNOW_K7_ACPI
&gt;&gt;&gt; =09if (acpi_processor_perf) {
&gt;&gt;&gt;@@ -655,7 +655,6 @@ static int powernow_cpu_exit(struct cpufreq=
_policy *policy)
&gt;&gt;&gt; #endif
&gt;&gt;&gt;=20
&gt;&gt;&gt; =09kfree(powernow_table);
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static struct cpufreq_driver powernow_driver =3D {
&gt;&gt;&gt;diff --git a/drivers/cpufreq/powernow-k8.c b/drivers/cpufreq/po=
wernow-k8.c
&gt;&gt;&gt;index b10f7a1b77f1..5e663c3a6736 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/powernow-k8.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/powernow-k8.c
&gt;&gt;&gt;@@ -1089,7 +1089,7 @@ static int powernowk8_cpu_init(struct cpu=
freq_policy *pol)
&gt;&gt;&gt; =09return -ENODEV;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int powernowk8_cpu_exit(struct cpufreq_policy *pol)
&gt;&gt;&gt;+static void powernowk8_cpu_exit(struct cpufreq_policy *pol)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09struct powernow_k8_data *data =3D per_cpu(powernow_data, po=
l-&gt;cpu);
&gt;&gt;&gt; =09int cpu;
&gt;&gt;&gt;@@ -1104,8 +1104,6 @@ static int powernowk8_cpu_exit(struct cpu=
freq_policy *pol)
&gt;&gt;&gt; =09/* pol-&gt;cpus will be empty here, use related_cpus instea=
d. */
&gt;&gt;&gt; =09for_each_cpu(cpu, pol-&gt;related_cpus)
&gt;&gt;&gt; =09=09per_cpu(powernow_data, cpu) =3D NULL;
&gt;&gt;&gt;-
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static void query_values_on_cpu(void *_err)
&gt;&gt;&gt;diff --git a/drivers/cpufreq/powernv-cpufreq.c b/drivers/cpufre=
q/powernv-cpufreq.c
&gt;&gt;&gt;index fddbd1ea1635..50c62929f7ca 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/powernv-cpufreq.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/powernv-cpufreq.c
&gt;&gt;&gt;@@ -874,7 +874,7 @@ static int powernv_cpufreq_cpu_init(struct =
cpufreq_policy *policy)
&gt;&gt;&gt; =09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int powernv_cpufreq_cpu_exit(struct cpufreq_policy *pol=
icy)
&gt;&gt;&gt;+static void powernv_cpufreq_cpu_exit(struct cpufreq_policy *po=
licy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09struct powernv_smp_call_data freq_data;
&gt;&gt;&gt; =09struct global_pstate_info *gpstates =3D policy-&gt;driver_d=
ata;
&gt;&gt;&gt;@@ -886,8 +886,6 @@ static int powernv_cpufreq_cpu_exit(struct =
cpufreq_policy *policy)
&gt;&gt;&gt; =09=09del_timer_sync(&amp;gpstates-&gt;timer);
&gt;&gt;&gt;=20
&gt;&gt;&gt; =09kfree(policy-&gt;driver_data);
&gt;&gt;&gt;-
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static int powernv_cpufreq_reboot_notifier(struct notifier_blo=
ck *nb,
&gt;&gt;&gt;diff --git a/drivers/cpufreq/ppc_cbe_cpufreq.c b/drivers/cpufre=
q/ppc_cbe_cpufreq.c
&gt;&gt;&gt;index 88afc49941b7..5ee4c7bfdcc5 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/ppc_cbe_cpufreq.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/ppc_cbe_cpufreq.c
&gt;&gt;&gt;@@ -113,10 +113,9 @@ static int cbe_cpufreq_cpu_init(struct cpu=
freq_policy *policy)
&gt;&gt;&gt; =09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int cbe_cpufreq_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt;+static void cbe_cpufreq_cpu_exit(struct cpufreq_policy *policy=
)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09cbe_cpufreq_pmi_policy_exit(policy);
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static int cbe_cpufreq_target(struct cpufreq_policy *policy,
&gt;&gt;&gt;diff --git a/drivers/cpufreq/qcom-cpufreq-hw.c b/drivers/cpufre=
q/qcom-cpufreq-hw.c
&gt;&gt;&gt;index 70b0f21968a0..bb818111162d 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/qcom-cpufreq-hw.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/qcom-cpufreq-hw.c
&gt;&gt;&gt;@@ -573,7 +573,7 @@ static int qcom_cpufreq_hw_cpu_init(struct =
cpufreq_policy *policy)
&gt;&gt;&gt; =09return qcom_cpufreq_hw_lmh_init(policy, index);
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int qcom_cpufreq_hw_cpu_exit(struct cpufreq_policy *pol=
icy)
&gt;&gt;&gt;+static void qcom_cpufreq_hw_cpu_exit(struct cpufreq_policy *po=
licy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09struct device *cpu_dev =3D get_cpu_device(policy-&gt;cpu);
&gt;&gt;&gt; =09struct qcom_cpufreq_data *data =3D policy-&gt;driver_data;
&gt;&gt;&gt;@@ -583,8 +583,6 @@ static int qcom_cpufreq_hw_cpu_exit(struct =
cpufreq_policy *policy)
&gt;&gt;&gt; =09qcom_cpufreq_hw_lmh_exit(data);
&gt;&gt;&gt; =09kfree(policy-&gt;freq_table);
&gt;&gt;&gt; =09kfree(data);
&gt;&gt;&gt;-
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static void qcom_cpufreq_ready(struct cpufreq_policy *policy)
&gt;&gt;&gt;diff --git a/drivers/cpufreq/qoriq-cpufreq.c b/drivers/cpufreq/=
qoriq-cpufreq.c
&gt;&gt;&gt;index 0aecaecbb0e6..3519bf34d397 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/qoriq-cpufreq.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/qoriq-cpufreq.c
&gt;&gt;&gt;@@ -225,7 +225,7 @@ static int qoriq_cpufreq_cpu_init(struct cp=
ufreq_policy *policy)
&gt;&gt;&gt; =09return -ENODEV;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int qoriq_cpufreq_cpu_exit(struct cpufreq_policy *polic=
y)
&gt;&gt;&gt;+static void qoriq_cpufreq_cpu_exit(struct cpufreq_policy *poli=
cy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09struct cpu_data *data =3D policy-&gt;driver_data;
&gt;&gt;&gt;=20
&gt;&gt;&gt;@@ -233,8 +233,6 @@ static int qoriq_cpufreq_cpu_exit(struct cp=
ufreq_policy *policy)
&gt;&gt;&gt; =09kfree(data-&gt;table);
&gt;&gt;&gt; =09kfree(data);
&gt;&gt;&gt; =09policy-&gt;driver_data =3D NULL;
&gt;&gt;&gt;-
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static int qoriq_cpufreq_target(struct cpufreq_policy *policy,
&gt;&gt;&gt;diff --git a/drivers/cpufreq/scmi-cpufreq.c b/drivers/cpufreq/s=
cmi-cpufreq.c
&gt;&gt;&gt;index 3b4f6bfb2f4c..bf5f17f0dfb1 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/scmi-cpufreq.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/scmi-cpufreq.c
&gt;&gt;&gt;@@ -308,7 +308,7 @@ static int scmi_cpufreq_init(struct cpufreq=
_policy *policy)
&gt;&gt;&gt; =09return ret;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int scmi_cpufreq_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt;+static void scmi_cpufreq_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09struct scmi_data *priv =3D policy-&gt;driver_data;
&gt;&gt;&gt;=20
&gt;&gt;&gt;@@ -316,8 +316,6 @@ static int scmi_cpufreq_exit(struct cpufreq=
_policy *policy)
&gt;&gt;&gt; =09dev_pm_opp_remove_all_dynamic(priv-&gt;cpu_dev);
&gt;&gt;&gt; =09free_cpumask_var(priv-&gt;opp_shared_cpus);
&gt;&gt;&gt; =09kfree(priv);
&gt;&gt;&gt;-
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static void scmi_cpufreq_register_em(struct cpufreq_policy *po=
licy)
&gt;&gt;&gt;diff --git a/drivers/cpufreq/scpi-cpufreq.c b/drivers/cpufreq/s=
cpi-cpufreq.c
&gt;&gt;&gt;index d33be56983ed..8d73e6e8be2a 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/scpi-cpufreq.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/scpi-cpufreq.c
&gt;&gt;&gt;@@ -167,7 +167,7 @@ static int scpi_cpufreq_init(struct cpufreq=
_policy *policy)
&gt;&gt;&gt; =09return ret;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int scpi_cpufreq_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt;+static void scpi_cpufreq_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09struct scpi_data *priv =3D policy-&gt;driver_data;
&gt;&gt;&gt;=20
&gt;&gt;&gt;@@ -175,8 +175,6 @@ static int scpi_cpufreq_exit(struct cpufreq=
_policy *policy)
&gt;&gt;&gt; =09dev_pm_opp_free_cpufreq_table(priv-&gt;cpu_dev, &amp;policy=
-&gt;freq_table);
&gt;&gt;&gt; =09dev_pm_opp_remove_all_dynamic(priv-&gt;cpu_dev);
&gt;&gt;&gt; =09kfree(priv);
&gt;&gt;&gt;-
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static struct cpufreq_driver scpi_cpufreq_driver =3D {
&gt;&gt;&gt;diff --git a/drivers/cpufreq/sh-cpufreq.c b/drivers/cpufreq/sh-=
cpufreq.c
&gt;&gt;&gt;index b8704232c27b..aa74036d0420 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/sh-cpufreq.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/sh-cpufreq.c
&gt;&gt;&gt;@@ -135,14 +135,12 @@ static int sh_cpufreq_cpu_init(struct cpu=
freq_policy *policy)
&gt;&gt;&gt; =09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int sh_cpufreq_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt;+static void sh_cpufreq_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09unsigned int cpu =3D policy-&gt;cpu;
&gt;&gt;&gt; =09struct clk *cpuclk =3D &amp;per_cpu(sh_cpuclk, cpu);
&gt;&gt;&gt;=20
&gt;&gt;&gt; =09clk_put(cpuclk);
&gt;&gt;&gt;-
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static struct cpufreq_driver sh_cpufreq_driver =3D {
&gt;&gt;&gt;diff --git a/drivers/cpufreq/sparc-us2e-cpufreq.c b/drivers/cpu=
freq/sparc-us2e-cpufreq.c
&gt;&gt;&gt;index 2783d3d55fce..8a0cd5312a59 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/sparc-us2e-cpufreq.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/sparc-us2e-cpufreq.c
&gt;&gt;&gt;@@ -296,10 +296,9 @@ static int us2e_freq_cpu_init(struct cpufr=
eq_policy *policy)
&gt;&gt;&gt; =09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int us2e_freq_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt;+static void us2e_freq_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09us2e_freq_target(policy, 0);
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static struct cpufreq_driver cpufreq_us2e_driver =3D {
&gt;&gt;&gt;diff --git a/drivers/cpufreq/sparc-us3-cpufreq.c b/drivers/cpuf=
req/sparc-us3-cpufreq.c
&gt;&gt;&gt;index 6c3657679a88..b50f9d13e6d2 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/sparc-us3-cpufreq.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/sparc-us3-cpufreq.c
&gt;&gt;&gt;@@ -140,10 +140,9 @@ static int us3_freq_cpu_init(struct cpufre=
q_policy *policy)
&gt;&gt;&gt; =09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int us3_freq_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt;+static void us3_freq_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09us3_freq_target(policy, 0);
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static struct cpufreq_driver cpufreq_us3_driver =3D {
&gt;&gt;&gt;diff --git a/drivers/cpufreq/speedstep-centrino.c b/drivers/cpu=
freq/speedstep-centrino.c
&gt;&gt;&gt;index 75b10ecdb60f..28e65bcf7242 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/speedstep-centrino.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/speedstep-centrino.c
&gt;&gt;&gt;@@ -400,7 +400,7 @@ static int centrino_cpu_init(struct cpufreq=
_policy *policy)
&gt;&gt;&gt; =09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int centrino_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt;+static void centrino_cpu_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09unsigned int cpu =3D policy-&gt;cpu;
&gt;&gt;&gt;=20
&gt;&gt;&gt;@@ -408,8 +408,6 @@ static int centrino_cpu_exit(struct cpufreq=
_policy *policy)
&gt;&gt;&gt; =09=09return -ENODEV;
&gt;&gt;&gt;=20
&gt;&gt;&gt; =09per_cpu(centrino_model, cpu) =3D NULL;
&gt;&gt;&gt;-
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; /**
&gt;&gt;&gt;diff --git a/drivers/cpufreq/tegra194-cpufreq.c b/drivers/cpufr=
eq/tegra194-cpufreq.c
&gt;&gt;&gt;index 59865ea455a8..07ea7ed61b68 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/tegra194-cpufreq.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/tegra194-cpufreq.c
&gt;&gt;&gt;@@ -551,14 +551,12 @@ static int tegra194_cpufreq_offline(struc=
t cpufreq_policy *policy)
&gt;&gt;&gt; =09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int tegra194_cpufreq_exit(struct cpufreq_policy *policy=
)
&gt;&gt;&gt;+static void tegra194_cpufreq_exit(struct cpufreq_policy *polic=
y)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09struct device *cpu_dev =3D get_cpu_device(policy-&gt;cpu);
&gt;&gt;&gt;=20
&gt;&gt;&gt; =09dev_pm_opp_remove_all_dynamic(cpu_dev);
&gt;&gt;&gt; =09dev_pm_opp_of_cpumask_remove_table(policy-&gt;related_cpus)=
;
&gt;&gt;&gt;-
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static int tegra194_cpufreq_set_target(struct cpufreq_policy *=
policy,
&gt;&gt;&gt;diff --git a/drivers/cpufreq/vexpress-spc-cpufreq.c b/drivers/c=
pufreq/vexpress-spc-cpufreq.c
&gt;&gt;&gt;index 9ac4ea50b874..b2a42cdb9582 100644
&gt;&gt;&gt;--- a/drivers/cpufreq/vexpress-spc-cpufreq.c
&gt;&gt;&gt;+++ b/drivers/cpufreq/vexpress-spc-cpufreq.c
&gt;&gt;&gt;@@ -447,7 +447,7 @@ static int ve_spc_cpufreq_init(struct cpufr=
eq_policy *policy)
&gt;&gt;&gt; =09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt;-static int ve_spc_cpufreq_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt;+static void ve_spc_cpufreq_exit(struct cpufreq_policy *policy)
&gt;&gt;&gt; {
&gt;&gt;&gt; =09struct device *cpu_dev;
&gt;&gt;&gt;=20
&gt;&gt;&gt;@@ -459,7 +459,6 @@ static int ve_spc_cpufreq_exit(struct cpufr=
eq_policy *policy)
&gt;&gt;&gt; =09}
&gt;&gt;&gt;=20
&gt;&gt;&gt; =09put_cluster_clk_and_freq_table(cpu_dev, policy-&gt;related_=
cpus);
&gt;&gt;&gt;-=09return 0;
&gt;&gt;&gt; }
&gt;&gt;&gt;=20
&gt;&gt;&gt; static struct cpufreq_driver ve_spc_cpufreq_driver =3D {
&gt;&gt;&gt;--=20
&gt;&gt;&gt;2.25.1
&gt;&gt;=20
</pre></div><img style=3D"width:1px;height:1px" src=3D"https://count.mail.1=
63.com/beacon/webmail.gif?type=3Dwebmail_mailtrace&amp;guid=3DENC_ZkIMXGZuJ=
0ACIW1rUmNTJj0zTyZ9Bx4iOztLJSsYTDpaVEkWbD14ZA0AeC9vI1xzYx4vdHRwe0gEUCkIOzM6=
EzRoXAF2eCJWey8pRw">
------=_Part_15090_85454238.1712759593886--

